
#include "SpehsEngine/Rendering/ModelManager.h"
#include "SpehsEngine/Rendering/Mesh.h"
#include "SpehsEngine/Core/Exceptions.h"

#include <GL/glew.h>

#include <fstream>


namespace spehs
{
	int checkArrayForElements(const std::vector<spehs::Vertex3D>& _array, const spehs::vec3& _position, const spehs::vec2& _textureCoord, const spehs::vec3& _normal)
	{
		for (unsigned i = 0; i < _array.size(); i++)
		{
			if (_array[i].position == _position && _array[i].uv == spehs::vec2(_textureCoord.x, _textureCoord.y) && _array[i].normal == spehs::vec3(_normal.x, _normal.y, _normal.z))
			{ // Element found -> return position
				return i;
			}
		}
		// Element not found
		return -1;
	}

	ModelData::ModelData() {}
	void ModelData::loadFromData(std::vector<spehs::Vertex3D> &_vertexArray, std::vector<GLushort> &_elementArray)
	{
		int index;
		std::vector<spehs::Vertex3D> vertexArray;
		std::vector<GLushort> elementArray;
		for (unsigned i = 0; i < vertexElements.size(); i++)
		{
			//Check if there is already a vertex with the wanted attributes (position, uv, normal)
			//if not -> create a new one
			//What ever is the position of that vertex in the array, add that to the element array
			if (textureCoordinates.size() == 0)
			{
				if (normals.size() == 0)
				{
					index = checkArrayForElements(vertexArray, vertices[vertexElements[i]].position, spehs::vec2::zero, spehs::vec3::zero);
					if (index < 0)
					{
						vertexArray.push_back(spehs::Vertex3D(vertices[vertexElements[i]].position,
							spehs::vec2::zero,
							spehs::vec3::zero));
						elementArray.push_back(vertexArray.size() - 1);
					}
					else
					{
						elementArray.push_back(index);
					}
				}
				else
				{
					index = checkArrayForElements(vertexArray, vertices[vertexElements[i]].position, spehs::vec2::zero, normals[normalElements[i]]);
					if (index < 0)
					{
						vertexArray.push_back(spehs::Vertex3D(vertices[vertexElements[i]].position,
							spehs::vec2::zero,
							spehs::vec3(normals[normalElements[i]].x, normals[normalElements[i]].y, normals[normalElements[i]].z)));
						elementArray.push_back(vertexArray.size() - 1);
					}
					else
					{
						elementArray.push_back(index);
					}
				}
			}
			else if (normals.size() == 0)
			{
				index = checkArrayForElements(vertexArray, vertices[vertexElements[i]].position, textureCoordinates[textureElements[i]], spehs::vec3::zero);
				if (index < 0)
				{
					vertexArray.push_back(Vertex3D(vertices[vertexElements[i]].position,
						spehs::vec2(textureCoordinates[textureElements[i]].x, textureCoordinates[textureElements[i]].y),
						spehs::vec3::zero));
					elementArray.push_back(vertexArray.size() - 1);
				}
				else
				{
					elementArray.push_back(index);
				}
			}
			else
			{
				index = checkArrayForElements(vertexArray, vertices[vertexElements[i]].position, textureCoordinates[textureElements[i]], normals[normalElements[i]]);
				if (index < 0)
				{
					vertexArray.push_back(Vertex3D(vertices[vertexElements[i]].position,
						spehs::vec2(textureCoordinates[textureElements[i]].x, textureCoordinates[textureElements[i]].y),
						spehs::vec3(normals[normalElements[i]].x, normals[normalElements[i]].y, normals[normalElements[i]].z)));
					elementArray.push_back(vertexArray.size() - 1);
				}
				else
				{
					elementArray.push_back(index);
				}
			}
		}
		_vertexArray.clear();
		_elementArray.clear();
		_vertexArray = vertexArray;
		_elementArray = elementArray;
	}


	ModelManager::ModelManager()
	{

	}
	ModelManager::~ModelManager()
	{
		clearAllModelData();
	}


	void ModelManager::loadModel(const std::string& _filepath, spehs::Mesh* _mesh)
	{
		//Check for special cases
		if (_filepath == "Cube")
		{
			size_t hash = std::hash<std::string>()(_filepath);
			auto it = modelDataMap.find(hash);
			if (it == modelDataMap.end())
			{
				//Data not found ->
				//Load new data
				loadOBJFromStringStream(loadCube(), hash);
				it = modelDataMap.find(hash);
			}
			it->second->loadFromData(_mesh->vertexArray, _mesh->elementArray);
			return;
		}
		else if (_filepath == "InvertedCube")
		{
			size_t hash = std::hash<std::string>()(_filepath);
			auto it = modelDataMap.find(hash);
			if (it == modelDataMap.end())
			{
				//Data not found ->
				//Load new data
				loadOBJFromStringStream(loadInvertedCube(), hash);
				it = modelDataMap.find(hash);
			}
			it->second->loadFromData(_mesh->vertexArray, _mesh->elementArray);
			return;
		}
		else if (_filepath == "InvertedSphere")
		{
			size_t hash = std::hash<std::string>()(_filepath);
			auto it = modelDataMap.find(hash);
			if (it == modelDataMap.end())
			{
				//Data not found ->
				//Load new data
				loadOBJFromStringStream(loadInvertedSphere(), hash);
				it = modelDataMap.find(hash);
			}
			it->second->loadFromData(_mesh->vertexArray, _mesh->elementArray);
			return;
		}

		//Check the file type of the given model file
		std::string fileEnding = "";
		auto it = _filepath.end() - 1;
		while (*it != '.')
		{
			fileEnding.push_back(*it);
			it--;
		}

		//Search for supported file types
		if (fileEnding == "jbo") //.obj files
		{
			loadOBJ(_filepath, _mesh);
			return;
		}
		else
		{
			exceptions::fatalError("The models file type is not supported!");
		}
	}
	void ModelManager::loadOBJ(const std::string& _filepath, spehs::Mesh* _mesh)
	{
		//Try to find from data map
		size_t hash = std::hash<std::string>()(_filepath);
		auto it = modelDataMap.find(hash);
		if (it == modelDataMap.end())
		{
			//Data not found ->
			//Load new data
			preloadOBJ(_filepath);
			it = modelDataMap.find(hash);
		}
		it->second->loadFromData(_mesh->vertexArray, _mesh->elementArray);
	}

	void ModelManager::loadOBJ(const size_t& _hash, spehs::Mesh* _mesh)
	{
		auto it = modelDataMap.find(_hash);
		if (it != modelDataMap.end())
		{
			it->second->loadFromData(_mesh->vertexArray, _mesh->elementArray);
			return;
		}
		else
		{
			spehs::exceptions::unexpectedError("Couldn't find model data: " + std::to_string(_hash));
			return;
		}
	}

	void ModelManager::preloadOBJ(const std::string& _filepath)
	{
		//Load new data
		std::ifstream file(_filepath, std::ios::in);
		if (!file.is_open())
		{
			spehs::exceptions::unexpectedError("Failed to open OBJ file: " + _filepath);
			return;
		}

		loadOBJFromFile(file, std::hash<std::string>()(_filepath));

		file.close();
	}

	void ModelManager::removeModelData(const std::string& _filepath)
	{
		size_t hash = std::hash<std::string>()(_filepath);
		auto it = modelDataMap.find(hash);
		if (it == modelDataMap.end())
		{
			spehs::exceptions::unexpectedError("Couldn't find model data: " + _filepath);
			return;
		}
		delete it->second;
		modelDataMap.erase(hash);
	}

	void ModelManager::removeModelData(const size_t& _hash)
	{
		auto it = modelDataMap.find(_hash);
		if (it == modelDataMap.end())
		{
			spehs::exceptions::unexpectedError("Couldn't find model data: " + std::to_string(_hash));
			return;
		}
		delete it->second;
		modelDataMap.erase(_hash);
	}

	void ModelManager::clearAllModelData()
	{
		for (auto &it : modelDataMap)
		{
			delete it.second;
		}
		modelDataMap.clear();
	}

#pragma region STATIC FILES
	std::istringstream ModelManager::loadCube()
	{
		const std::string file =
		{
			"v -1.000000 -1.000000 -1.000000\n"
			"v -1.000000 -1.000000 1.000000\n"
			"v 1.000000 -1.000000 1.000000\n"
			"v 0.999999 1.000000 1.000001\n"
			"v -1.000000 1.000000 1.000000\n"
			"v -1.000000 1.000000 -1.000000\n"
			"v 1.000000 1.000000 -0.999999\n"
			"v 1.000000 -1.000000 -1.000000\n"
			"vn 0.000000 -1.000000 -0.000000\n"
			"vn -0.000000 1.000000 0.000000\n"
			"vn 1.000000 0.000000 0.000000\n"
			"vn -0.000000 -0.000000 1.000000\n"
			"vn -1.000000 -0.000000 0.000000\n"
			"vn 0.000000 0.000000 -1.000000\n"
			"f 1//1 3//1 2//1\n"
			"f 4//2 6//2 5//2\n"
			"f 3//3 7//3 4//3\n"
			"f 2//4 4//4 5//4\n"
			"f 2//5 6//5 1//5\n"
			"f 6//6 8//6 1//6\n"
			"f 8//1 3//1 1//1\n"
			"f 7//2 6//2 4//2\n"
			"f 8//3 7//3 3//3\n"
			"f 3//4 4//4 2//4\n"
			"f 5//5 6//5 2//5\n"
			"f 7//6 8//6 6//6\n"
		};
		return std::istringstream(file);
	}

	std::istringstream ModelManager::loadInvertedCube()
	{
		const std::string file =
		{
			"v 1.000000 -1.000000 -1.000000\n"
			"v 1.000000 -1.000000 1.000000\n"
			"v -1.000000 -1.000000 1.000000\n"
			"v -1.000000 -1.000000 -1.000000\n"
			"v 1.000000 1.000000 -1.000000\n"
			"v 1.000000 1.000000 1.000000\n"
			"v -1.000000 1.000000 1.000000\n"
			"v -1.000000 1.000000 -1.000000\n"
			"vn 0.000000 1.000000 0.000000\n"
			"vn 0.000000 -1.000000 0.000000\n"
			"vn -1.000000 -0.000000 -0.000000\n"
			"vn 0.000000 -0.000000 -1.000000\n"
			"vn 1.000000 0.000000 0.000000\n"
			"vn -0.000000 -0.000000 1.000000\n"
			"f 4//1 3//1 2//1\n"
			"f 6//2 7//2 8//2\n"
			"f 2//3 6//3 5//3\n"
			"f 3//4 7//4 6//4\n"
			"f 3//5 4//5 8//5\n"
			"f 8//6 4//6 1//6\n"
			"f 1//1 4//1 2//1\n"
			"f 5//2 6//2 8//2\n"
			"f 1//3 2//3 5//3\n"
			"f 2//4 3//4 6//4\n"
			"f 7//5 3//5 8//5\n"
			"f 5//6 8//6 1//6\n"
		};
		return std::istringstream(file);
	}

	std::istringstream ModelManager::loadInvertedSphere()
	{
		const std::string file =
		{
			"v -0.195090 0.980785 0.000000\n"
			"v -0.382683 0.923880 0.000000\n"
			"v -0.555570 0.831470 0.000000\n"
			"v -0.707107 0.707107 0.000000\n"
			"v -0.831470 0.555570 0.000000\n"
			"v -0.923880 0.382683 0.000000\n"
			"v -0.980785 0.195090 0.000000\n"
			"v -1.000000 0.000000 0.000000\n"
			"v -0.980785 -0.195090 0.000000\n"
			"v -0.923880 -0.382683 0.000000\n"
			"v -0.831470 -0.555570 0.000000\n"
			"v -0.707107 -0.707107 0.000000\n"
			"v -0.555570 -0.831470 0.000000\n"
			"v -0.382683 -0.923880 0.000000\n"
			"v -0.195090 -0.980785 0.000000\n"
			"v -0.191342 0.980785 -0.038060\n"
			"v -0.375330 0.923880 -0.074658\n"
			"v -0.544895 0.831470 -0.108386\n"
			"v -0.693520 0.707107 -0.137950\n"
			"v -0.815493 0.555570 -0.162212\n"
			"v -0.906127 0.382683 -0.180240\n"
			"v -0.961940 0.195090 -0.191342\n"
			"v -0.980785 0.000000 -0.195090\n"
			"v -0.961940 -0.195090 -0.191342\n"
			"v -0.906127 -0.382683 -0.180240\n"
			"v -0.815493 -0.555570 -0.162212\n"
			"v -0.693520 -0.707107 -0.137950\n"
			"v -0.544895 -0.831470 -0.108386\n"
			"v -0.375330 -0.923880 -0.074658\n"
			"v -0.191341 -0.980785 -0.038060\n"
			"v -0.180240 0.980785 -0.074658\n"
			"v -0.353553 0.923880 -0.146447\n"
			"v -0.513280 0.831470 -0.212608\n"
			"v -0.653281 0.707107 -0.270598\n"
			"v -0.768178 0.555570 -0.318190\n"
			"v -0.853553 0.382683 -0.353553\n"
			"v -0.906127 0.195090 -0.375330\n"
			"v -0.923879 0.000000 -0.382684\n"
			"v -0.906127 -0.195090 -0.375330\n"
			"v -0.853553 -0.382683 -0.353554\n"
			"v -0.768178 -0.555570 -0.318190\n"
			"v -0.653281 -0.707107 -0.270598\n"
			"v -0.513280 -0.831470 -0.212608\n"
			"v -0.353553 -0.923880 -0.146447\n"
			"v -0.180240 -0.980785 -0.074658\n"
			"v -0.162212 0.980785 -0.108387\n"
			"v -0.318190 0.923880 -0.212608\n"
			"v -0.461940 0.831470 -0.308658\n"
			"v -0.587938 0.707107 -0.392848\n"
			"v -0.691342 0.555570 -0.461940\n"
			"v -0.768178 0.382683 -0.513280\n"
			"v -0.815493 0.195090 -0.544895\n"
			"v -0.831469 0.000000 -0.555570\n"
			"v -0.815493 -0.195090 -0.544895\n"
			"v -0.768178 -0.382683 -0.513280\n"
			"v -0.691342 -0.555570 -0.461940\n"
			"v -0.587938 -0.707107 -0.392848\n"
			"v -0.461940 -0.831470 -0.308658\n"
			"v -0.318189 -0.923880 -0.212608\n"
			"v -0.162211 -0.980785 -0.108386\n"
			"v -0.137950 0.980785 -0.137950\n"
			"v -0.270598 0.923880 -0.270598\n"
			"v -0.392847 0.831470 -0.392848\n"
			"v -0.500000 0.707107 -0.500000\n"
			"v -0.587938 0.555570 -0.587938\n"
			"v -0.653281 0.382683 -0.653282\n"
			"v -0.693520 0.195090 -0.693520\n"
			"v -0.707107 0.000000 -0.707107\n"
			"v -0.693520 -0.195090 -0.693520\n"
			"v -0.653281 -0.382683 -0.653282\n"
			"v -0.587938 -0.555570 -0.587938\n"
			"v -0.500000 -0.707107 -0.500000\n"
			"v -0.392847 -0.831470 -0.392848\n"
			"v -0.270598 -0.923880 -0.270598\n"
			"v -0.137949 -0.980785 -0.137950\n"
			"v -0.108386 0.980785 -0.162212\n"
			"v -0.212607 0.923880 -0.318190\n"
			"v -0.308658 0.831470 -0.461940\n"
			"v -0.392847 0.707107 -0.587938\n"
			"v -0.461940 0.555570 -0.691342\n"
			"v -0.513280 0.382683 -0.768178\n"
			"v -0.544895 0.195090 -0.815493\n"
			"v -0.555570 0.000000 -0.831470\n"
			"v -0.544895 -0.195090 -0.815493\n"
			"v -0.513280 -0.382683 -0.768178\n"
			"v -0.461940 -0.555570 -0.691342\n"
			"v -0.392847 -0.707107 -0.587938\n"
			"v -0.308658 -0.831470 -0.461940\n"
			"v -0.212607 -0.923880 -0.318190\n"
			"v -0.108386 -0.980785 -0.162212\n"
			"v -0.074658 0.980785 -0.180240\n"
			"v -0.146446 0.923880 -0.353554\n"
			"v -0.212607 0.831470 -0.513280\n"
			"v -0.270598 0.707107 -0.653282\n"
			"v -0.318189 0.555570 -0.768178\n"
			"v -0.353553 0.382683 -0.853554\n"
			"v -0.375330 0.195090 -0.906128\n"
			"v -0.382683 0.000000 -0.923880\n"
			"v -0.375330 -0.195090 -0.906128\n"
			"v -0.353553 -0.382683 -0.853554\n"
			"v -0.318189 -0.555570 -0.768178\n"
			"v -0.270598 -0.707107 -0.653282\n"
			"v -0.212607 -0.831470 -0.513280\n"
			"v -0.146446 -0.923880 -0.353554\n"
			"v -0.074658 -0.980785 -0.180240\n"
			"v -0.038060 0.980785 -0.191342\n"
			"v -0.074658 0.923880 -0.375331\n"
			"v -0.108386 0.831470 -0.544895\n"
			"v -0.137949 0.707107 -0.693520\n"
			"v -0.162211 0.555570 -0.815493\n"
			"v -0.180240 0.382683 -0.906128\n"
			"v -0.191341 0.195090 -0.961940\n"
			"v -0.195090 0.000000 -0.980785\n"
			"v -0.191341 -0.195090 -0.961940\n"
			"v -0.180240 -0.382683 -0.906128\n"
			"v -0.162211 -0.555570 -0.815493\n"
			"v -0.137949 -0.707107 -0.693520\n"
			"v -0.108386 -0.831470 -0.544895\n"
			"v -0.074658 -0.923880 -0.375330\n"
			"v -0.038060 -0.980785 -0.191342\n"
			"v 0.000000 0.980785 -0.195091\n"
			"v 0.000000 0.923880 -0.382684\n"
			"v 0.000000 0.831470 -0.555570\n"
			"v 0.000000 0.707107 -0.707107\n"
			"v 0.000000 0.555570 -0.831470\n"
			"v 0.000000 0.382683 -0.923880\n"
			"v 0.000000 0.195090 -0.980785\n"
			"v 0.000000 0.000000 -1.000000\n"
			"v 0.000000 -0.195090 -0.980785\n"
			"v 0.000000 -0.382683 -0.923880\n"
			"v 0.000000 -0.555570 -0.831470\n"
			"v 0.000000 -0.707107 -0.707107\n"
			"v 0.000000 -0.831470 -0.555570\n"
			"v 0.000000 -0.923880 -0.382684\n"
			"v 0.000000 -0.980785 -0.195090\n"
			"v 0.038061 0.980785 -0.191342\n"
			"v 0.074658 0.923880 -0.375331\n"
			"v 0.108387 0.831470 -0.544895\n"
			"v 0.137950 0.707107 -0.693520\n"
			"v 0.162212 0.555570 -0.815493\n"
			"v 0.180240 0.382683 -0.906128\n"
			"v 0.191342 0.195090 -0.961940\n"
			"v 0.195091 0.000000 -0.980785\n"
			"v 0.191342 -0.195090 -0.961940\n"
			"v 0.180240 -0.382683 -0.906128\n"
			"v 0.162212 -0.555570 -0.815493\n"
			"v 0.137950 -0.707107 -0.693520\n"
			"v 0.108387 -0.831470 -0.544895\n"
			"v 0.074658 -0.923880 -0.375330\n"
			"v 0.038061 -0.980785 -0.191342\n"
			"v 0.074658 0.980785 -0.180240\n"
			"v 0.146447 0.923880 -0.353554\n"
			"v 0.212608 0.831470 -0.513280\n"
			"v 0.270598 0.707107 -0.653282\n"
			"v 0.318190 0.555570 -0.768178\n"
			"v 0.353554 0.382683 -0.853554\n"
			"v 0.375331 0.195090 -0.906127\n"
			"v 0.382684 0.000000 -0.923880\n"
			"v 0.375331 -0.195090 -0.906127\n"
			"v 0.353554 -0.382683 -0.853554\n"
			"v 0.318190 -0.555570 -0.768178\n"
			"v 0.270598 -0.707107 -0.653282\n"
			"v 0.212608 -0.831470 -0.513280\n"
			"v 0.146447 -0.923880 -0.353553\n"
			"v 0.074658 -0.980785 -0.180240\n"
			"v 0.108387 0.980785 -0.162212\n"
			"v 0.212608 0.923880 -0.318190\n"
			"v 0.308659 0.831470 -0.461940\n"
			"v 0.392848 0.707107 -0.587938\n"
			"v 0.461940 0.555570 -0.691342\n"
			"v 0.513280 0.382683 -0.768178\n"
			"v 0.544895 0.195090 -0.815493\n"
			"v 0.555571 0.000000 -0.831470\n"
			"v 0.544895 -0.195090 -0.815493\n"
			"v 0.513280 -0.382683 -0.768178\n"
			"v 0.461940 -0.555570 -0.691342\n"
			"v 0.392848 -0.707107 -0.587938\n"
			"v 0.308659 -0.831470 -0.461940\n"
			"v 0.212608 -0.923880 -0.318190\n"
			"v 0.108387 -0.980785 -0.162212\n"
			"v 0.137950 0.980785 -0.137950\n"
			"v 0.270599 0.923880 -0.270598\n"
			"v 0.392848 0.831470 -0.392848\n"
			"v 0.500000 0.707107 -0.500000\n"
			"v 0.587938 0.555570 -0.587938\n"
			"v 0.653282 0.382683 -0.653282\n"
			"v 0.693520 0.195090 -0.693520\n"
			"v 0.707107 0.000000 -0.707107\n"
			"v 0.693520 -0.195090 -0.693520\n"
			"v 0.653282 -0.382683 -0.653282\n"
			"v 0.587938 -0.555570 -0.587938\n"
			"v 0.500000 -0.707107 -0.500000\n"
			"v 0.392848 -0.831470 -0.392848\n"
			"v 0.270598 -0.923880 -0.270598\n"
			"v 0.137950 -0.980785 -0.137950\n"
			"v 0.162212 0.980785 -0.108386\n"
			"v 0.318190 0.923880 -0.212608\n"
			"v 0.461940 0.831470 -0.308658\n"
			"v 0.587938 0.707107 -0.392848\n"
			"v 0.691342 0.555570 -0.461940\n"
			"v 0.768178 0.382683 -0.513280\n"
			"v 0.815493 0.195090 -0.544895\n"
			"v 0.831470 0.000000 -0.555570\n"
			"v 0.815493 -0.195090 -0.544895\n"
			"v 0.768178 -0.382683 -0.513280\n"
			"v 0.691342 -0.555570 -0.461940\n"
			"v 0.587938 -0.707107 -0.392848\n"
			"v 0.461940 -0.831470 -0.308658\n"
			"v 0.318190 -0.923880 -0.212608\n"
			"v 0.162212 -0.980785 -0.108386\n"
			"v 0.180240 0.980785 -0.074658\n"
			"v 0.353554 0.923880 -0.146447\n"
			"v 0.513280 0.831470 -0.212608\n"
			"v 0.653282 0.707107 -0.270598\n"
			"v 0.768178 0.555570 -0.318190\n"
			"v 0.853554 0.382683 -0.353553\n"
			"v 0.906128 0.195090 -0.375330\n"
			"v 0.923880 0.000000 -0.382683\n"
			"v 0.906128 -0.195090 -0.375330\n"
			"v 0.853554 -0.382683 -0.353553\n"
			"v 0.768178 -0.555570 -0.318190\n"
			"v 0.653282 -0.707107 -0.270598\n"
			"v 0.513280 -0.831470 -0.212608\n"
			"v 0.353554 -0.923880 -0.146447\n"
			"v 0.180240 -0.980785 -0.074658\n"
			"v 0.191342 0.980785 -0.038060\n"
			"v 0.375331 0.923880 -0.074658\n"
			"v 0.544896 0.831470 -0.108386\n"
			"v 0.693520 0.707107 -0.137950\n"
			"v 0.815493 0.555570 -0.162212\n"
			"v 0.906128 0.382683 -0.180240\n"
			"v 0.961940 0.195090 -0.191342\n"
			"v 0.980786 0.000000 -0.195090\n"
			"v 0.961940 -0.195090 -0.191342\n"
			"v 0.906128 -0.382683 -0.180240\n"
			"v 0.815493 -0.555570 -0.162212\n"
			"v 0.693520 -0.707107 -0.137950\n"
			"v 0.544895 -0.831470 -0.108386\n"
			"v 0.375331 -0.923880 -0.074658\n"
			"v 0.191342 -0.980785 -0.038060\n"
			"v 0.195091 0.980785 0.000000\n"
			"v 0.382684 0.923880 -0.000000\n"
			"v 0.555571 0.831470 -0.000000\n"
			"v 0.707107 0.707107 0.000000\n"
			"v 0.831470 0.555570 0.000000\n"
			"v 0.923880 0.382683 -0.000000\n"
			"v 0.980785 0.195090 0.000000\n"
			"v 1.000000 0.000000 0.000000\n"
			"v 0.980785 -0.195090 0.000000\n"
			"v 0.923880 -0.382683 -0.000000\n"
			"v 0.831470 -0.555570 0.000000\n"
			"v 0.707107 -0.707107 0.000000\n"
			"v 0.555570 -0.831470 0.000000\n"
			"v 0.382684 -0.923880 -0.000000\n"
			"v 0.195091 -0.980785 -0.000000\n"
			"v 0.191342 0.980785 0.038060\n"
			"v 0.375331 0.923880 0.074658\n"
			"v 0.544896 0.831470 0.108386\n"
			"v 0.693520 0.707107 0.137950\n"
			"v 0.815493 0.555570 0.162212\n"
			"v 0.906128 0.382683 0.180240\n"
			"v 0.961940 0.195090 0.191342\n"
			"v 0.980786 0.000000 0.195090\n"
			"v 0.961940 -0.195090 0.191342\n"
			"v 0.906128 -0.382683 0.180240\n"
			"v 0.815493 -0.555570 0.162212\n"
			"v 0.693520 -0.707107 0.137950\n"
			"v 0.544895 -0.831470 0.108386\n"
			"v 0.375331 -0.923880 0.074658\n"
			"v 0.191342 -0.980785 0.038060\n"
			"v 0.180240 0.980785 0.074658\n"
			"v 0.353554 0.923880 0.146447\n"
			"v 0.513280 0.831470 0.212608\n"
			"v 0.653282 0.707107 0.270598\n"
			"v 0.768178 0.555570 0.318190\n"
			"v 0.853554 0.382683 0.353553\n"
			"v 0.906127 0.195090 0.375330\n"
			"v 0.923880 0.000000 0.382684\n"
			"v 0.906127 -0.195090 0.375330\n"
			"v 0.853554 -0.382683 0.353553\n"
			"v 0.768178 -0.555570 0.318190\n"
			"v 0.653282 -0.707107 0.270598\n"
			"v 0.513280 -0.831470 0.212608\n"
			"v 0.353554 -0.923880 0.146447\n"
			"v 0.180240 -0.980785 0.074658\n"
			"v 0.162212 0.980785 0.108386\n"
			"v 0.318190 0.923880 0.212608\n"
			"v 0.461940 0.831470 0.308658\n"
			"v 0.587938 0.707107 0.392847\n"
			"v 0.691342 0.555570 0.461940\n"
			"v 0.768178 0.382683 0.513280\n"
			"v 0.815493 0.195090 0.544895\n"
			"v 0.831470 0.000000 0.555570\n"
			"v 0.815493 -0.195090 0.544895\n"
			"v 0.768178 -0.382683 0.513280\n"
			"v 0.691342 -0.555570 0.461940\n"
			"v 0.587938 -0.707107 0.392847\n"
			"v 0.461940 -0.831470 0.308658\n"
			"v 0.318190 -0.923880 0.212607\n"
			"v 0.162212 -0.980785 0.108386\n"
			"v 0.137950 0.980785 0.137950\n"
			"v 0.270598 0.923880 0.270598\n"
			"v 0.392848 0.831470 0.392848\n"
			"v 0.500000 0.707107 0.500000\n"
			"v 0.587938 0.555570 0.587938\n"
			"v 0.653282 0.382683 0.653281\n"
			"v 0.693520 0.195090 0.693520\n"
			"v 0.707107 0.000000 0.707107\n"
			"v 0.693520 -0.195090 0.693520\n"
			"v 0.653282 -0.382683 0.653281\n"
			"v 0.587938 -0.555570 0.587938\n"
			"v 0.500000 -0.707107 0.500000\n"
			"v 0.392848 -0.831470 0.392847\n"
			"v 0.270598 -0.923880 0.270598\n"
			"v 0.137950 -0.980785 0.137950\n"
			"v 0.108387 0.980785 0.162212\n"
			"v 0.212608 0.923880 0.318190\n"
			"v 0.308659 0.831470 0.461940\n"
			"v 0.392848 0.707107 0.587938\n"
			"v 0.461940 0.555570 0.691342\n"
			"v 0.513280 0.382683 0.768178\n"
			"v 0.544895 0.195090 0.815493\n"
			"v 0.555570 0.000000 0.831470\n"
			"v 0.544895 -0.195090 0.815493\n"
			"v 0.513280 -0.382683 0.768178\n"
			"v 0.461940 -0.555570 0.691342\n"
			"v 0.392848 -0.707107 0.587938\n"
			"v 0.308658 -0.831470 0.461940\n"
			"v 0.212608 -0.923880 0.318190\n"
			"v 0.108387 -0.980785 0.162212\n"
			"v 0.000000 -1.000000 0.000000\n"
			"v 0.074658 0.980785 0.180240\n"
			"v 0.146447 0.923880 0.353553\n"
			"v 0.212608 0.831470 0.513280\n"
			"v 0.270598 0.707107 0.653281\n"
			"v 0.318190 0.555570 0.768177\n"
			"v 0.353554 0.382683 0.853553\n"
			"v 0.375330 0.195090 0.906127\n"
			"v 0.382684 0.000000 0.923880\n"
			"v 0.375330 -0.195090 0.906127\n"
			"v 0.353554 -0.382683 0.853553\n"
			"v 0.318190 -0.555570 0.768177\n"
			"v 0.270598 -0.707107 0.653281\n"
			"v 0.212608 -0.831470 0.513280\n"
			"v 0.146447 -0.923880 0.353553\n"
			"v 0.074658 -0.980785 0.180240\n"
			"v 0.038061 0.980785 0.191342\n"
			"v 0.074658 0.923880 0.375330\n"
			"v 0.108387 0.831470 0.544895\n"
			"v 0.137950 0.707107 0.693520\n"
			"v 0.162212 0.555570 0.815493\n"
			"v 0.180240 0.382683 0.906127\n"
			"v 0.191342 0.195090 0.961939\n"
			"v 0.195090 0.000000 0.980785\n"
			"v 0.191342 -0.195090 0.961939\n"
			"v 0.180240 -0.382683 0.906127\n"
			"v 0.162212 -0.555570 0.815493\n"
			"v 0.137950 -0.707107 0.693520\n"
			"v 0.108387 -0.831470 0.544895\n"
			"v 0.074658 -0.923880 0.375330\n"
			"v 0.038061 -0.980785 0.191342\n"
			"v 0.000000 0.980785 0.195090\n"
			"v 0.000000 0.923880 0.382683\n"
			"v 0.000000 0.831470 0.555570\n"
			"v 0.000000 0.707107 0.707107\n"
			"v 0.000000 0.555570 0.831469\n"
			"v 0.000000 0.382683 0.923879\n"
			"v 0.000000 0.195090 0.980785\n"
			"v 0.000000 0.000000 1.000000\n"
			"v 0.000000 -0.195090 0.980785\n"
			"v 0.000000 -0.382683 0.923879\n"
			"v 0.000000 -0.555570 0.831469\n"
			"v 0.000000 -0.707107 0.707107\n"
			"v 0.000000 -0.831470 0.555570\n"
			"v 0.000000 -0.923880 0.382683\n"
			"v 0.000000 -0.980785 0.195090\n"
			"v -0.038060 0.980785 0.191342\n"
			"v -0.074658 0.923880 0.375330\n"
			"v -0.108386 0.831470 0.544895\n"
			"v -0.137949 0.707107 0.693520\n"
			"v -0.162211 0.555570 0.815493\n"
			"v -0.180240 0.382683 0.906127\n"
			"v -0.191342 0.195090 0.961939\n"
			"v -0.195090 0.000000 0.980785\n"
			"v -0.191342 -0.195090 0.961939\n"
			"v -0.180240 -0.382683 0.906127\n"
			"v -0.162211 -0.555570 0.815493\n"
			"v -0.137949 -0.707107 0.693520\n"
			"v -0.108386 -0.831470 0.544895\n"
			"v -0.074658 -0.923880 0.375330\n"
			"v -0.038060 -0.980785 0.191342\n"
			"v -0.074658 0.980785 0.180240\n"
			"v -0.146446 0.923880 0.353553\n"
			"v -0.212607 0.831470 0.513280\n"
			"v -0.270598 0.707107 0.653281\n"
			"v -0.318189 0.555570 0.768177\n"
			"v -0.353553 0.382683 0.853553\n"
			"v -0.375330 0.195090 0.906127\n"
			"v -0.382683 0.000000 0.923879\n"
			"v -0.375330 -0.195090 0.906127\n"
			"v -0.353553 -0.382683 0.853553\n"
			"v -0.318189 -0.555570 0.768177\n"
			"v -0.270598 -0.707107 0.653281\n"
			"v -0.212607 -0.831470 0.513280\n"
			"v -0.146446 -0.923880 0.353553\n"
			"v -0.074657 -0.980785 0.180240\n"
			"v -0.108386 0.980785 0.162212\n"
			"v -0.212607 0.923880 0.318190\n"
			"v -0.308658 0.831470 0.461940\n"
			"v -0.392847 0.707107 0.587938\n"
			"v -0.461939 0.555570 0.691341\n"
			"v -0.513280 0.382683 0.768178\n"
			"v -0.544895 0.195090 0.815493\n"
			"v -0.555570 0.000000 0.831469\n"
			"v -0.544895 -0.195090 0.815493\n"
			"v -0.513280 -0.382683 0.768178\n"
			"v -0.461939 -0.555570 0.691341\n"
			"v -0.392847 -0.707107 0.587938\n"
			"v -0.308658 -0.831470 0.461940\n"
			"v -0.212607 -0.923880 0.318189\n"
			"v -0.108386 -0.980785 0.162212\n"
			"v -0.137949 0.980785 0.137950\n"
			"v -0.270598 0.923880 0.270598\n"
			"v -0.392847 0.831470 0.392847\n"
			"v -0.500000 0.707107 0.500000\n"
			"v -0.587937 0.555570 0.587937\n"
			"v -0.653281 0.382683 0.653281\n"
			"v -0.693519 0.195090 0.693519\n"
			"v -0.707106 0.000000 0.707106\n"
			"v -0.693519 -0.195090 0.693519\n"
			"v -0.653281 -0.382683 0.653281\n"
			"v -0.587937 -0.555570 0.587937\n"
			"v -0.500000 -0.707107 0.500000\n"
			"v -0.392847 -0.831470 0.392847\n"
			"v -0.270598 -0.923880 0.270598\n"
			"v -0.137949 -0.980785 0.137950\n"
			"v -0.162211 0.980785 0.108386\n"
			"v -0.318189 0.923880 0.212607\n"
			"v -0.461939 0.831470 0.308658\n"
			"v -0.587937 0.707107 0.392847\n"
			"v -0.691341 0.555570 0.461939\n"
			"v -0.768177 0.382683 0.513280\n"
			"v -0.815492 0.195090 0.544895\n"
			"v -0.831469 0.000000 0.555570\n"
			"v -0.815492 -0.195090 0.544895\n"
			"v -0.768177 -0.382683 0.513280\n"
			"v -0.691341 -0.555570 0.461939\n"
			"v -0.587937 -0.707107 0.392847\n"
			"v -0.461939 -0.831470 0.308658\n"
			"v -0.318189 -0.923880 0.212607\n"
			"v -0.162211 -0.980785 0.108386\n"
			"v 0.000000 1.000000 0.000000\n"
			"v -0.180240 0.980785 0.074658\n"
			"v -0.353553 0.923880 0.146447\n"
			"v -0.513280 0.831470 0.212607\n"
			"v -0.653281 0.707107 0.270598\n"
			"v -0.768177 0.555570 0.318189\n"
			"v -0.853553 0.382683 0.353553\n"
			"v -0.906127 0.195090 0.375330\n"
			"v -0.923879 0.000000 0.382683\n"
			"v -0.906127 -0.195090 0.375330\n"
			"v -0.853553 -0.382683 0.353553\n"
			"v -0.768177 -0.555570 0.318189\n"
			"v -0.653281 -0.707107 0.270598\n"
			"v -0.513279 -0.831470 0.212607\n"
			"v -0.353553 -0.923880 0.146446\n"
			"v -0.180240 -0.980785 0.074658\n"
			"v -0.191342 0.980785 0.038060\n"
			"v -0.375330 0.923880 0.074658\n"
			"v -0.544895 0.831470 0.108386\n"
			"v -0.693520 0.707107 0.137950\n"
			"v -0.815492 0.555570 0.162211\n"
			"v -0.906127 0.382683 0.180240\n"
			"v -0.961939 0.195090 0.191341\n"
			"v -0.980785 0.000000 0.195090\n"
			"v -0.961939 -0.195090 0.191341\n"
			"v -0.906127 -0.382683 0.180240\n"
			"v -0.815492 -0.555570 0.162211\n"
			"v -0.693520 -0.707107 0.137950\n"
			"v -0.544895 -0.831470 0.108386\n"
			"v -0.375330 -0.923880 0.074658\n"
			"v -0.191341 -0.980785 0.038060\n"
			"vn 0.470900 -0.881000 0.046400\n"
			"vn 0.878600 0.469600 0.086500\n"
			"vn 0.633200 -0.771500 0.062400\n"
			"vn 0.770800 0.632600 0.075900\n"
			"vn 0.770800 -0.632600 0.075900\n"
			"vn 0.633200 0.771500 0.062400\n"
			"vn 0.878600 -0.469600 0.086500\n"
			"vn 0.470900 0.881000 0.046400\n"
			"vn 0.952700 -0.289000 0.093800\n"
			"vn 0.290200 0.956500 0.028600\n"
			"vn 0.990400 -0.097500 0.097500\n"
			"vn 0.990400 0.097500 0.097500\n"
			"vn 0.290200 -0.956500 0.028600\n"
			"vn 0.952700 0.289000 0.093800\n"
			"vn 0.279000 -0.956500 0.084600\n"
			"vn 0.916100 0.289000 0.277900\n"
			"vn 0.452800 -0.881000 0.137400\n"
			"vn 0.844800 0.469600 0.256300\n"
			"vn 0.608800 -0.771500 0.184700\n"
			"vn 0.741200 0.632600 0.224800\n"
			"vn 0.741200 -0.632600 0.224800\n"
			"vn 0.608800 0.771500 0.184700\n"
			"vn 0.844800 -0.469600 0.256300\n"
			"vn 0.452800 0.881000 0.137400\n"
			"vn 0.916100 -0.289000 0.277900\n"
			"vn 0.279000 0.956500 0.084600\n"
			"vn 0.952400 -0.097600 0.288900\n"
			"vn 0.952400 0.097600 0.288900\n"
			"vn 0.778600 -0.469600 0.416200\n"
			"vn 0.417300 0.881000 0.223000\n"
			"vn 0.844300 -0.289000 0.451300\n"
			"vn 0.257100 0.956500 0.137400\n"
			"vn 0.877700 -0.097500 0.469100\n"
			"vn 0.877700 0.097500 0.469100\n"
			"vn 0.257100 -0.956500 0.137400\n"
			"vn 0.844300 0.289000 0.451300\n"
			"vn 0.417300 -0.881000 0.223100\n"
			"vn 0.778600 0.469600 0.416200\n"
			"vn 0.561100 -0.771500 0.299900\n"
			"vn 0.683100 0.632600 0.365100\n"
			"vn 0.683100 -0.632600 0.365100\n"
			"vn 0.561100 0.771500 0.299900\n"
			"vn 0.740000 0.289000 0.607300\n"
			"vn 0.365800 -0.881000 0.300200\n"
			"vn 0.682500 0.469600 0.560100\n"
			"vn 0.491800 -0.771500 0.403600\n"
			"vn 0.598700 0.632600 0.491300\n"
			"vn 0.598700 -0.632600 0.491300\n"
			"vn 0.491800 0.771500 0.403600\n"
			"vn 0.682500 -0.469600 0.560100\n"
			"vn 0.365800 0.881000 0.300200\n"
			"vn 0.740000 -0.289000 0.607300\n"
			"vn 0.225400 0.956500 0.185000\n"
			"vn 0.769300 -0.097600 0.631400\n"
			"vn 0.769300 0.097600 0.631400\n"
			"vn 0.225400 -0.956500 0.185000\n"
			"vn 0.300200 0.881000 0.365800\n"
			"vn 0.607300 -0.289000 0.740000\n"
			"vn 0.185000 0.956500 0.225400\n"
			"vn 0.631400 -0.097600 0.769300\n"
			"vn 0.631400 0.097600 0.769300\n"
			"vn 0.185000 -0.956500 0.225400\n"
			"vn 0.607300 0.289000 0.740000\n"
			"vn 0.300200 -0.881000 0.365800\n"
			"vn 0.560100 0.469600 0.682500\n"
			"vn 0.403600 -0.771500 0.491800\n"
			"vn 0.491300 0.632600 0.598700\n"
			"vn 0.491300 -0.632600 0.598700\n"
			"vn 0.403600 0.771500 0.491800\n"
			"vn 0.560100 -0.469600 0.682500\n"
			"vn 0.223100 -0.881000 0.417300\n"
			"vn 0.416200 0.469600 0.778600\n"
			"vn 0.299900 -0.771500 0.561100\n"
			"vn 0.365100 0.632600 0.683100\n"
			"vn 0.365100 -0.632600 0.683100\n"
			"vn 0.299900 0.771500 0.561100\n"
			"vn 0.416200 -0.469600 0.778600\n"
			"vn 0.223100 0.881000 0.417300\n"
			"vn 0.451300 -0.289000 0.844300\n"
			"vn 0.137400 0.956500 0.257100\n"
			"vn 0.469100 -0.097600 0.877700\n"
			"vn 0.469100 0.097600 0.877700\n"
			"vn 0.137400 -0.956500 0.257100\n"
			"vn 0.451300 0.289000 0.844300\n"
			"vn 0.277900 -0.289000 0.916100\n"
			"vn 0.084600 0.956500 0.279000\n"
			"vn 0.288900 -0.097600 0.952400\n"
			"vn 0.288900 0.097600 0.952400\n"
			"vn 0.084600 -0.956500 0.279000\n"
			"vn 0.277900 0.289000 0.916100\n"
			"vn 0.137400 -0.881000 0.452800\n"
			"vn 0.256300 0.469600 0.844800\n"
			"vn 0.184700 -0.771500 0.608800\n"
			"vn 0.224800 0.632600 0.741200\n"
			"vn 0.224800 -0.632600 0.741200\n"
			"vn 0.184700 0.771500 0.608800\n"
			"vn 0.256300 -0.469600 0.844800\n"
			"vn 0.137400 0.881000 0.452800\n"
			"vn 0.086500 0.469600 0.878600\n"
			"vn 0.062400 -0.771500 0.633200\n"
			"vn 0.075900 0.632600 0.770800\n"
			"vn 0.075900 -0.632600 0.770800\n"
			"vn 0.062400 0.771500 0.633200\n"
			"vn 0.086500 -0.469600 0.878600\n"
			"vn 0.046400 0.881000 0.470900\n"
			"vn 0.093800 -0.289000 0.952700\n"
			"vn 0.028600 0.956500 0.290200\n"
			"vn 0.097500 -0.097600 0.990400\n"
			"vn 0.097500 0.097600 0.990400\n"
			"vn 0.028600 -0.956500 0.290200\n"
			"vn 0.093800 0.289000 0.952700\n"
			"vn 0.046400 -0.881000 0.470900\n"
			"vn -0.028600 0.956500 0.290200\n"
			"vn -0.097600 -0.097600 0.990400\n"
			"vn -0.097500 0.097600 0.990400\n"
			"vn -0.028600 -0.956500 0.290200\n"
			"vn -0.093800 0.289000 0.952700\n"
			"vn -0.046400 -0.881000 0.470900\n"
			"vn -0.086500 0.469600 0.878600\n"
			"vn -0.062400 -0.771500 0.633200\n"
			"vn -0.075900 0.632600 0.770800\n"
			"vn -0.075900 -0.632600 0.770800\n"
			"vn -0.062400 0.771500 0.633200\n"
			"vn -0.086500 -0.469600 0.878600\n"
			"vn -0.046400 0.881000 0.470900\n"
			"vn -0.093800 -0.289000 0.952700\n"
			"vn -0.224800 0.632600 0.741200\n"
			"vn -0.224800 -0.632600 0.741200\n"
			"vn -0.184700 0.771500 0.608800\n"
			"vn -0.256300 -0.469600 0.844800\n"
			"vn -0.137400 0.881000 0.452800\n"
			"vn -0.277900 -0.289000 0.916100\n"
			"vn -0.084600 0.956500 0.279000\n"
			"vn -0.288900 -0.097600 0.952400\n"
			"vn -0.288900 0.097600 0.952400\n"
			"vn -0.084600 -0.956500 0.279000\n"
			"vn -0.277900 0.289000 0.916100\n"
			"vn -0.137400 -0.881000 0.452800\n"
			"vn -0.256300 0.469600 0.844800\n"
			"vn -0.184700 -0.771500 0.608800\n"
			"vn -0.469100 0.097600 0.877700\n"
			"vn -0.137400 -0.956500 0.257100\n"
			"vn -0.451300 0.289000 0.844300\n"
			"vn -0.223000 -0.881000 0.417300\n"
			"vn -0.416200 0.469600 0.778600\n"
			"vn -0.299900 -0.771500 0.561100\n"
			"vn -0.365100 0.632600 0.683100\n"
			"vn -0.365100 -0.632600 0.683100\n"
			"vn -0.299900 0.771500 0.561100\n"
			"vn -0.416200 -0.469600 0.778600\n"
			"vn -0.223000 0.881000 0.417300\n"
			"vn -0.451300 -0.289000 0.844300\n"
			"vn -0.137400 0.956600 0.257100\n"
			"vn -0.469100 -0.097600 0.877700\n"
			"vn -0.491300 -0.632600 0.598700\n"
			"vn -0.403600 0.771500 0.491800\n"
			"vn -0.560100 -0.469600 0.682500\n"
			"vn -0.300200 0.881000 0.365800\n"
			"vn -0.607300 -0.289000 0.740000\n"
			"vn -0.185000 0.956500 0.225400\n"
			"vn -0.631400 -0.097600 0.769300\n"
			"vn -0.631400 0.097600 0.769300\n"
			"vn -0.185000 -0.956500 0.225400\n"
			"vn -0.607300 0.289000 0.740000\n"
			"vn -0.300200 -0.881000 0.365800\n"
			"vn -0.560100 0.469600 0.682500\n"
			"vn -0.403600 -0.771500 0.491800\n"
			"vn -0.491300 0.632600 0.598700\n"
			"vn -0.769300 0.097600 0.631400\n"
			"vn -0.225400 -0.956500 0.185000\n"
			"vn -0.740000 0.289000 0.607300\n"
			"vn -0.365800 -0.881000 0.300200\n"
			"vn -0.682500 0.469600 0.560100\n"
			"vn -0.491800 -0.771500 0.403600\n"
			"vn -0.598700 0.632600 0.491300\n"
			"vn -0.598700 -0.632600 0.491300\n"
			"vn -0.491800 0.771500 0.403600\n"
			"vn -0.682500 -0.469600 0.560100\n"
			"vn -0.365800 0.881000 0.300200\n"
			"vn -0.740000 -0.289000 0.607300\n"
			"vn -0.225400 0.956500 0.185000\n"
			"vn -0.769300 -0.097600 0.631400\n"
			"vn -0.561100 0.771500 0.299900\n"
			"vn -0.778600 -0.469600 0.416200\n"
			"vn -0.417300 0.881000 0.223000\n"
			"vn -0.844300 -0.289000 0.451300\n"
			"vn -0.257100 0.956500 0.137400\n"
			"vn -0.877700 -0.097600 0.469100\n"
			"vn -0.877700 0.097600 0.469100\n"
			"vn -0.257100 -0.956500 0.137400\n"
			"vn -0.844300 0.289000 0.451300\n"
			"vn -0.417300 -0.881000 0.223100\n"
			"vn -0.778600 0.469600 0.416200\n"
			"vn -0.561100 -0.771500 0.299900\n"
			"vn -0.683100 0.632600 0.365100\n"
			"vn -0.683100 -0.632600 0.365100\n"
			"vn -0.279000 -0.956500 0.084600\n"
			"vn -0.916100 0.289000 0.277900\n"
			"vn -0.452800 -0.881000 0.137400\n"
			"vn -0.844800 0.469600 0.256300\n"
			"vn -0.608800 -0.771500 0.184700\n"
			"vn -0.741200 0.632600 0.224800\n"
			"vn -0.741200 -0.632600 0.224800\n"
			"vn -0.608800 0.771500 0.184700\n"
			"vn -0.844800 -0.469600 0.256300\n"
			"vn -0.452800 0.881000 0.137400\n"
			"vn -0.916100 -0.289000 0.277900\n"
			"vn -0.279000 0.956500 0.084600\n"
			"vn -0.952400 -0.097600 0.288900\n"
			"vn -0.952400 0.097600 0.288900\n"
			"vn -0.878600 -0.469600 0.086500\n"
			"vn -0.470900 0.881000 0.046400\n"
			"vn -0.952700 -0.289000 0.093800\n"
			"vn -0.290200 0.956500 0.028600\n"
			"vn -0.990400 -0.097600 0.097500\n"
			"vn -0.990400 0.097600 0.097500\n"
			"vn -0.290200 -0.956500 0.028600\n"
			"vn -0.952700 0.289000 0.093800\n"
			"vn -0.470900 -0.881000 0.046400\n"
			"vn -0.878600 0.469600 0.086500\n"
			"vn -0.633200 -0.771500 0.062400\n"
			"vn -0.770800 0.632600 0.075900\n"
			"vn -0.770800 -0.632600 0.075900\n"
			"vn -0.633200 0.771500 0.062400\n"
			"vn -0.952700 0.289000 -0.093800\n"
			"vn -0.470900 -0.881000 -0.046400\n"
			"vn -0.878600 0.469600 -0.086500\n"
			"vn -0.633200 -0.771500 -0.062400\n"
			"vn -0.770800 0.632600 -0.075900\n"
			"vn -0.770800 -0.632600 -0.075900\n"
			"vn -0.633200 0.771500 -0.062400\n"
			"vn -0.878600 -0.469600 -0.086500\n"
			"vn -0.470900 0.881000 -0.046400\n"
			"vn -0.952700 -0.289000 -0.093800\n"
			"vn -0.290200 0.956500 -0.028600\n"
			"vn -0.990400 -0.097600 -0.097500\n"
			"vn -0.990400 0.097600 -0.097500\n"
			"vn -0.290200 -0.956500 -0.028600\n"
			"vn -0.452800 0.881000 -0.137400\n"
			"vn -0.916100 -0.289000 -0.277900\n"
			"vn -0.279000 0.956500 -0.084600\n"
			"vn -0.952400 -0.097600 -0.288900\n"
			"vn -0.952400 0.097600 -0.288900\n"
			"vn -0.279000 -0.956500 -0.084600\n"
			"vn -0.916100 0.289000 -0.277900\n"
			"vn -0.452800 -0.881000 -0.137400\n"
			"vn -0.844800 0.469600 -0.256300\n"
			"vn -0.608800 -0.771500 -0.184700\n"
			"vn -0.741200 0.632600 -0.224800\n"
			"vn -0.741200 -0.632600 -0.224800\n"
			"vn -0.608800 0.771500 -0.184700\n"
			"vn -0.844800 -0.469600 -0.256300\n"
			"vn -0.778600 0.469600 -0.416200\n"
			"vn -0.561100 -0.771500 -0.299900\n"
			"vn -0.683100 0.632600 -0.365100\n"
			"vn -0.683100 -0.632600 -0.365100\n"
			"vn -0.561100 0.771500 -0.299900\n"
			"vn -0.778600 -0.469600 -0.416200\n"
			"vn -0.417300 0.881000 -0.223100\n"
			"vn -0.844300 -0.289000 -0.451300\n"
			"vn -0.257100 0.956500 -0.137400\n"
			"vn -0.877700 -0.097600 -0.469100\n"
			"vn -0.877700 0.097600 -0.469100\n"
			"vn -0.257100 -0.956500 -0.137400\n"
			"vn -0.844300 0.289000 -0.451300\n"
			"vn -0.417300 -0.881000 -0.223100\n"
			"vn -0.225400 0.956500 -0.185000\n"
			"vn -0.769300 -0.097600 -0.631400\n"
			"vn -0.769300 0.097600 -0.631400\n"
			"vn -0.225400 -0.956500 -0.185000\n"
			"vn -0.740000 0.289000 -0.607300\n"
			"vn -0.365800 -0.881000 -0.300200\n"
			"vn -0.682500 0.469600 -0.560100\n"
			"vn -0.491800 -0.771500 -0.403600\n"
			"vn -0.598700 0.632600 -0.491300\n"
			"vn -0.598700 -0.632600 -0.491300\n"
			"vn -0.491800 0.771500 -0.403600\n"
			"vn -0.682500 -0.469600 -0.560100\n"
			"vn -0.365800 0.881000 -0.300200\n"
			"vn -0.740000 -0.289000 -0.607300\n"
			"vn -0.403600 -0.771500 -0.491800\n"
			"vn -0.491300 0.632600 -0.598700\n"
			"vn -0.491300 -0.632600 -0.598700\n"
			"vn -0.403600 0.771500 -0.491800\n"
			"vn -0.560100 -0.469600 -0.682500\n"
			"vn -0.300200 0.881000 -0.365800\n"
			"vn -0.607300 -0.289000 -0.740000\n"
			"vn -0.185000 0.956500 -0.225400\n"
			"vn -0.631400 -0.097600 -0.769300\n"
			"vn -0.631400 0.097600 -0.769300\n"
			"vn -0.185000 -0.956500 -0.225400\n"
			"vn -0.607300 0.289000 -0.740000\n"
			"vn -0.300200 -0.881000 -0.365800\n"
			"vn -0.560100 0.469600 -0.682500\n"
			"vn -0.469100 -0.097600 -0.877700\n"
			"vn -0.469100 0.097600 -0.877700\n"
			"vn -0.137400 -0.956500 -0.257100\n"
			"vn -0.451300 0.289000 -0.844300\n"
			"vn -0.223000 -0.881000 -0.417300\n"
			"vn -0.416200 0.469600 -0.778600\n"
			"vn -0.299900 -0.771500 -0.561100\n"
			"vn -0.365100 0.632600 -0.683100\n"
			"vn -0.365100 -0.632600 -0.683100\n"
			"vn -0.299900 0.771500 -0.561100\n"
			"vn -0.416200 -0.469600 -0.778600\n"
			"vn -0.223000 0.881000 -0.417300\n"
			"vn -0.451300 -0.289000 -0.844300\n"
			"vn -0.137400 0.956600 -0.257100\n"
			"vn -0.224800 0.632600 -0.741200\n"
			"vn -0.224800 -0.632600 -0.741200\n"
			"vn -0.184700 0.771500 -0.608800\n"
			"vn -0.256300 -0.469600 -0.844800\n"
			"vn -0.137400 0.881000 -0.452800\n"
			"vn -0.277900 -0.289000 -0.916100\n"
			"vn -0.084600 0.956500 -0.279000\n"
			"vn -0.288900 -0.097600 -0.952400\n"
			"vn -0.288900 0.097600 -0.952400\n"
			"vn -0.084600 -0.956500 -0.279000\n"
			"vn -0.277900 0.289000 -0.916100\n"
			"vn -0.137400 -0.881000 -0.452800\n"
			"vn -0.256300 0.469600 -0.844800\n"
			"vn -0.184700 -0.771500 -0.608800\n"
			"vn -0.097500 0.097600 -0.990400\n"
			"vn -0.028600 -0.956500 -0.290200\n"
			"vn -0.093800 0.289000 -0.952700\n"
			"vn -0.046400 -0.881000 -0.470900\n"
			"vn -0.086500 0.469600 -0.878600\n"
			"vn -0.062400 -0.771500 -0.633200\n"
			"vn -0.075900 0.632600 -0.770800\n"
			"vn -0.075900 -0.632600 -0.770800\n"
			"vn -0.062400 0.771500 -0.633200\n"
			"vn -0.086500 -0.469600 -0.878600\n"
			"vn -0.046400 0.881000 -0.470900\n"
			"vn -0.093800 -0.289000 -0.952700\n"
			"vn -0.028600 0.956500 -0.290200\n"
			"vn -0.097500 -0.097600 -0.990400\n"
			"vn 0.075900 -0.632600 -0.770800\n"
			"vn 0.062400 0.771500 -0.633200\n"
			"vn 0.086500 -0.469600 -0.878600\n"
			"vn 0.046400 0.881000 -0.470900\n"
			"vn 0.093800 -0.289000 -0.952700\n"
			"vn 0.028600 0.956500 -0.290200\n"
			"vn 0.097500 -0.097600 -0.990400\n"
			"vn 0.097500 0.097600 -0.990400\n"
			"vn 0.028600 -0.956500 -0.290200\n"
			"vn 0.093800 0.289000 -0.952700\n"
			"vn 0.046400 -0.881000 -0.470900\n"
			"vn 0.086500 0.469600 -0.878600\n"
			"vn 0.062400 -0.771500 -0.633200\n"
			"vn 0.075900 0.632600 -0.770800\n"
			"vn 0.288900 0.097600 -0.952400\n"
			"vn 0.084600 -0.956500 -0.279000\n"
			"vn 0.277900 0.289000 -0.916100\n"
			"vn 0.137400 -0.881000 -0.452800\n"
			"vn 0.256300 0.469600 -0.844800\n"
			"vn 0.184700 -0.771500 -0.608800\n"
			"vn 0.224800 0.632600 -0.741200\n"
			"vn 0.224800 -0.632600 -0.741200\n"
			"vn 0.184700 0.771500 -0.608800\n"
			"vn 0.256300 -0.469600 -0.844800\n"
			"vn 0.137400 0.881000 -0.452800\n"
			"vn 0.277900 -0.289000 -0.916100\n"
			"vn 0.084600 0.956500 -0.279000\n"
			"vn 0.288900 -0.097600 -0.952400\n"
			"vn 0.299900 0.771500 -0.561100\n"
			"vn 0.416200 -0.469600 -0.778600\n"
			"vn 0.223100 0.881000 -0.417300\n"
			"vn 0.451300 -0.289000 -0.844300\n"
			"vn 0.137400 0.956500 -0.257100\n"
			"vn 0.469100 -0.097600 -0.877700\n"
			"vn 0.469100 0.097600 -0.877700\n"
			"vn 0.137400 -0.956500 -0.257100\n"
			"vn 0.451300 0.289000 -0.844300\n"
			"vn 0.223100 -0.881000 -0.417300\n"
			"vn 0.416200 0.469600 -0.778600\n"
			"vn 0.299900 -0.771500 -0.561100\n"
			"vn 0.365100 0.632600 -0.683100\n"
			"vn 0.365100 -0.632600 -0.683100\n"
			"vn 0.607300 0.289000 -0.740000\n"
			"vn 0.300200 -0.881000 -0.365800\n"
			"vn 0.560100 0.469600 -0.682500\n"
			"vn 0.403600 -0.771500 -0.491800\n"
			"vn 0.491300 0.632600 -0.598700\n"
			"vn 0.491300 -0.632600 -0.598700\n"
			"vn 0.403600 0.771500 -0.491800\n"
			"vn 0.560100 -0.469600 -0.682500\n"
			"vn 0.300200 0.881000 -0.365800\n"
			"vn 0.607300 -0.289000 -0.740000\n"
			"vn 0.185000 0.956500 -0.225400\n"
			"vn 0.631400 -0.097600 -0.769300\n"
			"vn 0.631400 0.097600 -0.769300\n"
			"vn 0.185000 -0.956500 -0.225400\n"
			"vn 0.365800 0.881000 -0.300200\n"
			"vn 0.740000 -0.289000 -0.607300\n"
			"vn 0.225400 0.956500 -0.185000\n"
			"vn 0.769300 -0.097600 -0.631400\n"
			"vn 0.769300 0.097600 -0.631400\n"
			"vn 0.225400 -0.956500 -0.185000\n"
			"vn 0.740000 0.289000 -0.607300\n"
			"vn 0.365800 -0.881000 -0.300200\n"
			"vn 0.682500 0.469600 -0.560100\n"
			"vn 0.491800 -0.771500 -0.403600\n"
			"vn 0.598700 0.632600 -0.491300\n"
			"vn 0.598700 -0.632600 -0.491300\n"
			"vn 0.491800 0.771500 -0.403600\n"
			"vn 0.682500 -0.469600 -0.560100\n"
			"vn 0.417300 -0.881000 -0.223100\n"
			"vn 0.778600 0.469600 -0.416200\n"
			"vn 0.561100 -0.771500 -0.299900\n"
			"vn 0.683100 0.632600 -0.365100\n"
			"vn 0.683100 -0.632600 -0.365100\n"
			"vn 0.561100 0.771500 -0.299900\n"
			"vn 0.778600 -0.469600 -0.416200\n"
			"vn 0.417300 0.881000 -0.223100\n"
			"vn 0.844300 -0.289000 -0.451300\n"
			"vn 0.257100 0.956500 -0.137400\n"
			"vn 0.877700 -0.097600 -0.469100\n"
			"vn 0.877700 0.097600 -0.469100\n"
			"vn 0.257100 -0.956500 -0.137400\n"
			"vn 0.844300 0.289000 -0.451300\n"
			"vn 0.916100 -0.289000 -0.277900\n"
			"vn 0.279000 0.956500 -0.084600\n"
			"vn 0.952400 -0.097600 -0.288900\n"
			"vn 0.952400 0.097600 -0.288900\n"
			"vn 0.279000 -0.956500 -0.084600\n"
			"vn 0.916100 0.289000 -0.277900\n"
			"vn 0.452800 -0.881000 -0.137400\n"
			"vn 0.844800 0.469600 -0.256300\n"
			"vn 0.608800 -0.771500 -0.184700\n"
			"vn 0.741200 0.632600 -0.224800\n"
			"vn 0.741200 -0.632600 -0.224800\n"
			"vn 0.608800 0.771500 -0.184700\n"
			"vn 0.844800 -0.469600 -0.256300\n"
			"vn 0.452800 0.881000 -0.137400\n"
			"vn 0.098000 -0.995100 0.009700\n"
			"vn 0.098000 0.995100 0.009700\n"
			"vn 0.094200 -0.995100 0.028600\n"
			"vn 0.094200 0.995100 0.028600\n"
			"vn 0.086900 -0.995100 0.046400\n"
			"vn 0.086900 0.995100 0.046400\n"
			"vn 0.076100 -0.995100 0.062500\n"
			"vn 0.076100 0.995100 0.062500\n"
			"vn 0.062500 -0.995100 0.076100\n"
			"vn 0.062500 0.995100 0.076100\n"
			"vn 0.046400 -0.995100 0.086900\n"
			"vn 0.046400 0.995100 0.086900\n"
			"vn 0.028600 -0.995100 0.094200\n"
			"vn 0.028600 0.995100 0.094200\n"
			"vn 0.009700 -0.995100 0.098000\n"
			"vn 0.009700 0.995100 0.098000\n"
			"vn -0.009700 -0.995100 0.098000\n"
			"vn -0.009700 0.995100 0.098000\n"
			"vn -0.028600 -0.995100 0.094200\n"
			"vn -0.028600 0.995100 0.094200\n"
			"vn -0.046400 -0.995100 0.086900\n"
			"vn -0.046400 0.995100 0.086900\n"
			"vn -0.062500 -0.995100 0.076100\n"
			"vn -0.062500 0.995100 0.076100\n"
			"vn -0.076100 -0.995100 0.062500\n"
			"vn -0.076100 0.995100 0.062500\n"
			"vn -0.086900 -0.995100 0.046400\n"
			"vn -0.086900 0.995100 0.046400\n"
			"vn -0.094200 -0.995100 0.028600\n"
			"vn -0.094200 0.995100 0.028600\n"
			"vn -0.098000 -0.995100 0.009700\n"
			"vn -0.098000 0.995100 0.009700\n"
			"vn -0.098000 -0.995100 -0.009700\n"
			"vn -0.098000 0.995100 -0.009700\n"
			"vn -0.094200 -0.995100 -0.028600\n"
			"vn -0.094200 0.995100 -0.028600\n"
			"vn -0.086900 -0.995100 -0.046400\n"
			"vn -0.086900 0.995100 -0.046400\n"
			"vn -0.076100 -0.995100 -0.062500\n"
			"vn -0.076100 0.995100 -0.062500\n"
			"vn -0.062500 -0.995100 -0.076100\n"
			"vn -0.062500 0.995100 -0.076100\n"
			"vn -0.046400 -0.995100 -0.086900\n"
			"vn -0.046400 0.995100 -0.086900\n"
			"vn -0.028600 -0.995100 -0.094200\n"
			"vn -0.028600 0.995100 -0.094200\n"
			"vn -0.009700 -0.995100 -0.098000\n"
			"vn -0.009700 0.995100 -0.098000\n"
			"vn 0.009700 -0.995100 -0.098000\n"
			"vn 0.009700 0.995100 -0.098000\n"
			"vn 0.028600 -0.995100 -0.094200\n"
			"vn 0.028600 0.995100 -0.094200\n"
			"vn 0.046400 -0.995100 -0.086900\n"
			"vn 0.046400 0.995100 -0.086900\n"
			"vn 0.062500 -0.995100 -0.076100\n"
			"vn 0.062500 0.995100 -0.076100\n"
			"vn 0.076100 -0.995100 -0.062500\n"
			"vn 0.076100 0.995100 -0.062500\n"
			"vn 0.086900 -0.995100 -0.046400\n"
			"vn 0.086900 0.995100 -0.046400\n"
			"vn 0.094200 -0.995100 -0.028600\n"
			"vn 0.094200 0.995100 -0.028600\n"
			"vn 0.878600 0.469600 -0.086500\n"
			"vn 0.633200 -0.771500 -0.062400\n"
			"vn 0.770800 0.632600 -0.075900\n"
			"vn 0.770800 -0.632600 -0.075900\n"
			"vn 0.633200 0.771500 -0.062400\n"
			"vn 0.878600 -0.469600 -0.086500\n"
			"vn 0.470900 0.881000 -0.046400\n"
			"vn 0.952700 -0.289000 -0.093800\n"
			"vn 0.290200 0.956500 -0.028600\n"
			"vn 0.990400 -0.097500 -0.097600\n"
			"vn 0.098000 -0.995100 -0.009700\n"
			"vn 0.098000 0.995100 -0.009700\n"
			"vn 0.990400 0.097500 -0.097600\n"
			"vn 0.290200 -0.956500 -0.028600\n"
			"vn 0.952700 0.289000 -0.093800\n"
			"vn 0.470900 -0.881000 -0.046400\n"
			"vn 0.990400 -0.097600 0.097500\n"
			"vn 0.990400 0.097600 0.097500\n"
			"vn 0.952400 -0.097500 0.288900\n"
			"vn 0.952400 0.097500 0.288900\n"
			"vn 0.417300 0.881000 0.223100\n"
			"vn 0.769300 -0.097500 0.631400\n"
			"vn 0.185000 0.956600 0.225400\n"
			"vn 0.223000 -0.881000 0.417300\n"
			"vn 0.223000 0.881000 0.417300\n"
			"vn -0.097500 -0.097600 0.990400\n"
			"vn -0.097600 0.097600 0.990400\n"
			"vn -0.223100 -0.881000 0.417300\n"
			"vn -0.223100 0.881000 0.417300\n"
			"vn -0.137400 0.956500 0.257100\n"
			"vn -0.225400 0.956600 0.185000\n"
			"vn -0.417300 0.881000 0.223100\n"
			"vn -0.137400 0.956500 -0.257100\n"
			"vn -0.028600 0.956600 -0.290200\n"
			"vn 0.097600 -0.097600 -0.990400\n"
			"vn 0.097600 0.097600 -0.990400\n"
			"vn 0.223000 -0.881000 -0.417300\n"
			"vn 0.417300 -0.881000 -0.223000\n"
			"vn 0.417300 0.881000 -0.223000\n"
			"vn 0.990400 -0.097600 -0.097600\n"
			"vn 0.990400 0.097600 -0.097600\n"
			"f 18//1 17//1 2//1\n"
			"f 11//2 26//2 25//2\n"
			"f 19//3 18//3 3//3\n"
			"f 12//4 27//4 26//4\n"
			"f 20//5 19//5 4//5\n"
			"f 13//6 28//6 27//6\n"
			"f 21//7 20//7 5//7\n"
			"f 14//8 29//8 28//8\n"
			"f 7//9 22//9 21//9\n"
			"f 15//10 30//10 29//10\n"
			"f 8//11 23//11 22//11\n"
			"f 24//12 23//12 8//12\n"
			"f 17//13 16//13 1//13\n"
			"f 25//14 24//14 9//14\n"
			"f 17//15 32//15 31//15\n"
			"f 40//16 39//16 24//16\n"
			"f 33//17 32//17 17//17\n"
			"f 26//18 41//18 40//18\n"
			"f 34//19 33//19 18//19\n"
			"f 27//20 42//20 41//20\n"
			"f 35//21 34//21 19//21\n"
			"f 43//22 42//22 27//22\n"
			"f 36//23 35//23 20//23\n"
			"f 44//24 43//24 28//24\n"
			"f 37//25 36//25 21//25\n"
			"f 30//26 45//26 44//26\n"
			"f 38//27 37//27 22//27\n"
			"f 24//28 39//28 38//28\n"
			"f 51//29 50//29 35//29\n"
			"f 59//30 58//30 43//30\n"
			"f 52//31 51//31 36//31\n"
			"f 60//32 59//32 44//32\n"
			"f 38//33 53//33 52//33\n"
			"f 54//34 53//34 38//34\n"
			"f 47//35 46//35 31//35\n"
			"f 55//36 54//36 39//36\n"
			"f 48//37 47//37 32//37\n"
			"f 41//38 56//38 55//38\n"
			"f 49//39 48//39 33//39\n"
			"f 57//40 56//40 41//40\n"
			"f 50//41 49//41 34//41\n"
			"f 58//42 57//42 42//42\n"
			"f 70//43 69//43 54//43\n"
			"f 63//44 62//44 47//44\n"
			"f 56//45 71//45 70//45\n"
			"f 64//46 63//46 48//46\n"
			"f 72//47 71//47 56//47\n"
			"f 65//48 64//48 49//48\n"
			"f 73//49 72//49 57//49\n"
			"f 66//50 65//50 50//50\n"
			"f 59//51 74//51 73//51\n"
			"f 52//52 67//52 66//52\n"
			"f 60//53 75//53 74//53\n"
			"f 53//54 68//54 67//54\n"
			"f 54//55 69//55 68//55\n"
			"f 62//56 61//56 46//56\n"
			"f 89//57 88//57 73//57\n"
			"f 67//58 82//58 81//58\n"
			"f 90//59 89//59 74//59\n"
			"f 68//60 83//60 82//60\n"
			"f 84//61 83//61 68//61\n"
			"f 77//62 76//62 61//62\n"
			"f 85//63 84//63 69//63\n"
			"f 78//64 77//64 62//64\n"
			"f 71//65 86//65 85//65\n"
			"f 79//66 78//66 63//66\n"
			"f 72//67 87//67 86//67\n"
			"f 80//68 79//68 64//68\n"
			"f 73//69 88//69 87//69\n"
			"f 81//70 80//70 65//70\n"
			"f 93//71 92//71 77//71\n"
			"f 86//72 101//72 100//72\n"
			"f 94//73 93//73 78//73\n"
			"f 87//74 102//74 101//74\n"
			"f 95//75 94//75 79//75\n"
			"f 88//76 103//76 102//76\n"
			"f 96//77 95//77 80//77\n"
			"f 104//78 103//78 88//78\n"
			"f 82//79 97//79 96//79\n"
			"f 105//80 104//80 89//80\n"
			"f 98//81 97//81 82//81\n"
			"f 84//82 99//82 98//82\n"
			"f 92//83 91//83 76//83\n"
			"f 100//84 99//84 84//84\n"
			"f 97//85 112//85 111//85\n"
			"f 120//86 119//86 104//86\n"
			"f 113//87 112//87 97//87\n"
			"f 114//88 113//88 98//88\n"
			"f 107//89 106//89 91//89\n"
			"f 115//90 114//90 99//90\n"
			"f 108//91 107//91 92//91\n"
			"f 101//92 116//92 115//92\n"
			"f 109//93 108//93 93//93\n"
			"f 117//94 116//94 101//94\n"
			"f 110//95 109//95 94//95\n"
			"f 118//96 117//96 102//96\n"
			"f 111//97 110//97 95//97\n"
			"f 119//98 118//98 103//98\n"
			"f 116//99 131//99 130//99\n"
			"f 109//100 124//100 123//100\n"
			"f 132//101 131//101 116//101\n"
			"f 125//102 124//102 109//102\n"
			"f 118//103 133//103 132//103\n"
			"f 126//104 125//104 110//104\n"
			"f 119//105 134//105 133//105\n"
			"f 112//106 127//106 126//106\n"
			"f 135//107 134//107 119//107\n"
			"f 128//108 127//108 112//108\n"
			"f 129//109 128//109 113//109\n"
			"f 122//110 121//110 106//110\n"
			"f 130//111 129//111 114//111\n"
			"f 123//112 122//112 107//112\n"
			"f 135//113 150//113 149//113\n"
			"f 143//114 142//114 127//114\n"
			"f 144//115 143//115 128//115\n"
			"f 137//116 136//116 121//116\n"
			"f 145//117 144//117 129//117\n"
			"f 138//118 137//118 122//118\n"
			"f 131//119 146//119 145//119\n"
			"f 139//120 138//120 123//120\n"
			"f 132//121 147//121 146//121\n"
			"f 125//122 140//122 139//122\n"
			"f 133//123 148//123 147//123\n"
			"f 141//124 140//124 125//124\n"
			"f 134//125 149//125 148//125\n"
			"f 127//126 142//126 141//126\n"
			"f 162//127 161//127 146//127\n"
			"f 140//128 155//128 154//128\n"
			"f 148//129 163//129 162//129\n"
			"f 156//130 155//130 140//130\n"
			"f 164//131 163//131 148//131\n"
			"f 142//132 157//132 156//132\n"
			"f 150//133 165//133 164//133\n"
			"f 158//134 157//134 142//134\n"
			"f 144//135 159//135 158//135\n"
			"f 152//136 151//136 136//136\n"
			"f 160//137 159//137 144//137\n"
			"f 153//138 152//138 137//138\n"
			"f 146//139 161//139 160//139\n"
			"f 154//140 153//140 138//140\n"
			"f 159//141 174//141 173//141\n"
			"f 167//142 166//142 151//142\n"
			"f 175//143 174//143 159//143\n"
			"f 153//144 168//144 167//144\n"
			"f 161//145 176//145 175//145\n"
			"f 169//146 168//146 153//146\n"
			"f 177//147 176//147 161//147\n"
			"f 155//148 170//148 169//148\n"
			"f 163//149 178//149 177//149\n"
			"f 171//150 170//150 155//150\n"
			"f 179//151 178//151 163//151\n"
			"f 157//152 172//152 171//152\n"
			"f 165//153 180//153 179//153\n"
			"f 173//154 172//154 157//154\n"
			"f 170//155 185//155 184//155\n"
			"f 178//156 193//156 192//156\n"
			"f 186//157 185//157 170//157\n"
			"f 179//158 194//158 193//158\n"
			"f 172//159 187//159 186//159\n"
			"f 180//160 195//160 194//160\n"
			"f 173//161 188//161 187//161\n"
			"f 189//162 188//162 173//162\n"
			"f 182//163 181//163 166//163\n"
			"f 190//164 189//164 174//164\n"
			"f 183//165 182//165 167//165\n"
			"f 176//166 191//166 190//166\n"
			"f 184//167 183//167 168//167\n"
			"f 177//168 192//168 191//168\n"
			"f 204//169 203//169 188//169\n"
			"f 197//170 196//170 181//170\n"
			"f 205//171 204//171 189//171\n"
			"f 198//172 197//172 182//172\n"
			"f 191//173 206//173 205//173\n"
			"f 199//174 198//174 183//174\n"
			"f 207//175 206//175 191//175\n"
			"f 185//176 200//176 199//176\n"
			"f 193//177 208//177 207//177\n"
			"f 201//178 200//178 185//178\n"
			"f 209//179 208//179 193//179\n"
			"f 187//180 202//180 201//180\n"
			"f 195//181 210//181 209//181\n"
			"f 188//182 203//182 202//182\n"
			"f 208//183 223//183 222//183\n"
			"f 216//184 215//184 200//184\n"
			"f 209//185 224//185 223//185\n"
			"f 202//186 217//186 216//186\n"
			"f 210//187 225//187 224//187\n"
			"f 203//188 218//188 217//188\n"
			"f 219//189 218//189 203//189\n"
			"f 212//190 211//190 196//190\n"
			"f 220//191 219//191 204//191\n"
			"f 213//192 212//192 197//192\n"
			"f 206//193 221//193 220//193\n"
			"f 199//194 214//194 213//194\n"
			"f 222//195 221//195 206//195\n"
			"f 215//196 214//196 199//196\n"
			"f 227//197 226//197 211//197\n"
			"f 235//198 234//198 219//198\n"
			"f 228//199 227//199 212//199\n"
			"f 221//200 236//200 235//200\n"
			"f 214//201 229//201 228//201\n"
			"f 222//202 237//202 236//202\n"
			"f 230//203 229//203 214//203\n"
			"f 238//204 237//204 222//204\n"
			"f 231//205 230//205 215//205\n"
			"f 239//206 238//206 223//206\n"
			"f 217//207 232//207 231//207\n"
			"f 240//208 239//208 224//208\n"
			"f 233//209 232//209 217//209\n"
			"f 234//210 233//210 218//210\n"
			"f 246//211 245//211 230//211\n"
			"f 239//212 254//212 253//212\n"
			"f 232//213 247//213 246//213\n"
			"f 240//214 255//214 254//214\n"
			"f 233//215 248//215 247//215\n"
			"f 234//216 249//216 248//216\n"
			"f 242//217 241//217 226//217\n"
			"f 250//218 249//218 234//218\n"
			"f 243//219 242//219 227//219\n"
			"f 236//220 251//220 250//220\n"
			"f 244//221 243//221 228//221\n"
			"f 252//222 251//222 236//222\n"
			"f 230//223 245//223 244//223\n"
			"f 253//224 252//224 237//224\n"
			"f 265//225 264//225 249//225\n"
			"f 258//226 257//226 242//226\n"
			"f 251//227 266//227 265//227\n"
			"f 259//228 258//228 243//228\n"
			"f 267//229 266//229 251//229\n"
			"f 260//230 259//230 244//230\n"
			"f 253//231 268//231 267//231\n"
			"f 261//232 260//232 245//232\n"
			"f 269//233 268//233 253//233\n"
			"f 247//234 262//234 261//234\n"
			"f 255//235 270//235 269//235\n"
			"f 263//236 262//236 247//236\n"
			"f 249//237 264//237 263//237\n"
			"f 257//238 256//238 241//238\n"
			"f 269//239 284//239 283//239\n"
			"f 262//240 277//240 276//240\n"
			"f 270//241 285//241 284//241\n"
			"f 278//242 277//242 262//242\n"
			"f 264//243 279//243 278//243\n"
			"f 272//244 271//244 256//244\n"
			"f 280//245 279//245 264//245\n"
			"f 273//246 272//246 257//246\n"
			"f 266//247 281//247 280//247\n"
			"f 259//248 274//248 273//248\n"
			"f 282//249 281//249 266//249\n"
			"f 275//250 274//250 259//250\n"
			"f 283//251 282//251 267//251\n"
			"f 276//252 275//252 260//252\n"
			"f 281//253 296//253 295//253\n"
			"f 274//254 289//254 288//254\n"
			"f 297//255 296//255 281//255\n"
			"f 275//256 290//256 289//256\n"
			"f 283//257 298//257 297//257\n"
			"f 291//258 290//258 275//258\n"
			"f 284//259 299//259 298//259\n"
			"f 277//260 292//260 291//260\n"
			"f 300//261 299//261 284//261\n"
			"f 278//262 293//262 292//262\n"
			"f 279//263 294//263 293//263\n"
			"f 287//264 286//264 271//264\n"
			"f 295//265 294//265 279//265\n"
			"f 288//266 287//266 272//266\n"
			"f 315//267 314//267 299//267\n"
			"f 293//268 308//268 307//268\n"
			"f 309//269 308//269 293//269\n"
			"f 302//270 301//270 286//270\n"
			"f 310//271 309//271 294//271\n"
			"f 303//272 302//272 287//272\n"
			"f 296//273 311//273 310//273\n"
			"f 289//274 304//274 303//274\n"
			"f 312//275 311//275 296//275\n"
			"f 290//276 305//276 304//276\n"
			"f 313//277 312//277 297//277\n"
			"f 306//278 305//278 290//278\n"
			"f 314//279 313//279 298//279\n"
			"f 292//280 307//280 306//280\n"
			"f 304//281 319//281 318//281\n"
			"f 327//282 326//282 311//282\n"
			"f 305//283 320//283 319//283\n"
			"f 313//284 328//284 327//284\n"
			"f 321//285 320//285 305//285\n"
			"f 314//286 329//286 328//286\n"
			"f 307//287 322//287 321//287\n"
			"f 330//288 329//288 314//288\n"
			"f 323//289 322//289 307//289\n"
			"f 324//290 323//290 308//290\n"
			"f 317//291 316//291 301//291\n"
			"f 325//292 324//292 309//292\n"
			"f 318//293 317//293 302//293\n"
			"f 311//294 326//294 325//294\n"
			"f 339//295 338//295 322//295\n"
			"f 324//296 340//296 339//296\n"
			"f 333//297 332//297 316//297\n"
			"f 341//298 340//298 324//298\n"
			"f 334//299 333//299 317//299\n"
			"f 326//300 342//300 341//300\n"
			"f 319//301 335//301 334//301\n"
			"f 343//302 342//302 326//302\n"
			"f 336//303 335//303 319//303\n"
			"f 328//304 344//304 343//304\n"
			"f 337//305 336//305 320//305\n"
			"f 345//306 344//306 328//306\n"
			"f 322//307 338//307 337//307\n"
			"f 330//308 346//308 345//308\n"
			"f 358//309 357//309 342//309\n"
			"f 336//310 351//310 350//310\n"
			"f 359//311 358//311 343//311\n"
			"f 352//312 351//312 336//312\n"
			"f 345//313 360//313 359//313\n"
			"f 338//314 353//314 352//314\n"
			"f 361//315 360//315 345//315\n"
			"f 354//316 353//316 338//316\n"
			"f 340//317 355//317 354//317\n"
			"f 348//318 347//318 332//318\n"
			"f 356//319 355//319 340//319\n"
			"f 349//320 348//320 333//320\n"
			"f 342//321 357//321 356//321\n"
			"f 335//322 350//322 349//322\n"
			"f 355//323 370//323 369//323\n"
			"f 363//324 362//324 347//324\n"
			"f 371//325 370//325 355//325\n"
			"f 364//326 363//326 348//326\n"
			"f 357//327 372//327 371//327\n"
			"f 350//328 365//328 364//328\n"
			"f 373//329 372//329 357//329\n"
			"f 351//330 366//330 365//330\n"
			"f 374//331 373//331 358//331\n"
			"f 367//332 366//332 351//332\n"
			"f 375//333 374//333 359//333\n"
			"f 353//334 368//334 367//334\n"
			"f 376//335 375//335 360//335\n"
			"f 369//336 368//336 353//336\n"
			"f 366//337 381//337 380//337\n"
			"f 389//338 388//338 373//338\n"
			"f 382//339 381//339 366//339\n"
			"f 390//340 389//340 374//340\n"
			"f 368//341 383//341 382//341\n"
			"f 391//342 390//342 375//342\n"
			"f 384//343 383//343 368//343\n"
			"f 370//344 385//344 384//344\n"
			"f 363//345 378//345 377//345\n"
			"f 386//346 385//346 370//346\n"
			"f 379//347 378//347 363//347\n"
			"f 372//348 387//348 386//348\n"
			"f 365//349 380//349 379//349\n"
			"f 388//350 387//350 372//350\n"
			"f 385//351 400//351 399//351\n"
			"f 378//352 393//352 392//352\n"
			"f 401//353 400//353 385//353\n"
			"f 379//354 394//354 393//354\n"
			"f 387//355 402//355 401//355\n"
			"f 395//356 394//356 379//356\n"
			"f 403//357 402//357 387//357\n"
			"f 381//358 396//358 395//358\n"
			"f 389//359 404//359 403//359\n"
			"f 397//360 396//360 381//360\n"
			"f 390//361 405//361 404//361\n"
			"f 383//362 398//362 397//362\n"
			"f 406//363 405//363 390//363\n"
			"f 399//364 398//364 383//364\n"
			"f 419//365 418//365 403//365\n"
			"f 412//366 411//366 396//366\n"
			"f 405//367 420//367 419//367\n"
			"f 398//368 413//368 412//368\n"
			"f 421//369 420//369 405//369\n"
			"f 414//370 413//370 398//370\n"
			"f 400//371 415//371 414//371\n"
			"f 408//372 407//372 392//372\n"
			"f 416//373 415//373 400//373\n"
			"f 409//374 408//374 393//374\n"
			"f 402//375 417//375 416//375\n"
			"f 395//376 410//376 409//376\n"
			"f 418//377 417//377 402//377\n"
			"f 396//378 411//378 410//378\n"
			"f 431//379 430//379 415//379\n"
			"f 424//380 423//380 408//380\n"
			"f 417//381 432//381 431//381\n"
			"f 425//382 424//382 409//382\n"
			"f 433//383 432//383 417//383\n"
			"f 411//384 426//384 425//384\n"
			"f 434//385 433//385 418//385\n"
			"f 427//386 426//386 411//386\n"
			"f 435//387 434//387 419//387\n"
			"f 413//388 428//388 427//388\n"
			"f 436//389 435//389 420//389\n"
			"f 429//390 428//390 413//390\n"
			"f 430//391 429//391 414//391\n"
			"f 423//392 422//392 407//392\n"
			"f 435//393 450//393 449//393\n"
			"f 428//394 443//394 442//394\n"
			"f 451//395 450//395 435//395\n"
			"f 444//396 443//396 428//396\n"
			"f 445//397 444//397 429//397\n"
			"f 438//398 437//398 422//398\n"
			"f 446//399 445//399 430//399\n"
			"f 439//400 438//400 423//400\n"
			"f 432//401 447//401 446//401\n"
			"f 440//402 439//402 424//402\n"
			"f 448//403 447//403 432//403\n"
			"f 426//404 441//404 440//404\n"
			"f 449//405 448//405 433//405\n"
			"f 442//406 441//406 426//406\n"
			"f 455//407 454//407 438//407\n"
			"f 447//408 463//408 462//408\n"
			"f 456//409 455//409 439//409\n"
			"f 464//410 463//410 447//410\n"
			"f 441//411 457//411 456//411\n"
			"f 465//412 464//412 448//412\n"
			"f 458//413 457//413 441//413\n"
			"f 466//414 465//414 449//414\n"
			"f 443//415 459//415 458//415\n"
			"f 467//416 466//416 450//416\n"
			"f 460//417 459//417 443//417\n"
			"f 461//418 460//418 444//418\n"
			"f 454//419 453//419 437//419\n"
			"f 462//420 461//420 445//420\n"
			"f 459//421 474//421 473//421\n"
			"f 482//422 481//422 466//422\n"
			"f 475//423 474//423 459//423\n"
			"f 476//424 475//424 460//424\n"
			"f 469//425 468//425 453//425\n"
			"f 477//426 476//426 461//426\n"
			"f 470//427 469//427 454//427\n"
			"f 463//428 478//428 477//428\n"
			"f 471//429 470//429 455//429\n"
			"f 479//430 478//430 463//430\n"
			"f 457//431 472//431 471//431\n"
			"f 465//432 480//432 479//432\n"
			"f 473//433 472//433 457//433\n"
			"f 466//434 481//434 480//434\n"
			"f 1//435 16//435 452//435\n"
			"f 331//436 30//436 15//436\n"
			"f 16//437 31//437 452//437\n"
			"f 331//438 45//438 30//438\n"
			"f 31//439 46//439 452//439\n"
			"f 331//440 60//440 45//440\n"
			"f 46//441 61//441 452//441\n"
			"f 331//442 75//442 60//442\n"
			"f 61//443 76//443 452//443\n"
			"f 331//444 90//444 75//444\n"
			"f 76//445 91//445 452//445\n"
			"f 331//446 105//446 90//446\n"
			"f 91//447 106//447 452//447\n"
			"f 331//448 120//448 105//448\n"
			"f 106//449 121//449 452//449\n"
			"f 331//450 135//450 120//450\n"
			"f 121//451 136//451 452//451\n"
			"f 331//452 150//452 135//452\n"
			"f 136//453 151//453 452//453\n"
			"f 331//454 165//454 150//454\n"
			"f 151//455 166//455 452//455\n"
			"f 331//456 180//456 165//456\n"
			"f 166//457 181//457 452//457\n"
			"f 331//458 195//458 180//458\n"
			"f 181//459 196//459 452//459\n"
			"f 331//460 210//460 195//460\n"
			"f 196//461 211//461 452//461\n"
			"f 331//462 225//462 210//462\n"
			"f 211//463 226//463 452//463\n"
			"f 331//464 240//464 225//464\n"
			"f 226//465 241//465 452//465\n"
			"f 331//466 255//466 240//466\n"
			"f 241//467 256//467 452//467\n"
			"f 331//468 270//468 255//468\n"
			"f 256//469 271//469 452//469\n"
			"f 331//470 285//470 270//470\n"
			"f 271//471 286//471 452//471\n"
			"f 331//472 300//472 285//472\n"
			"f 286//473 301//473 452//473\n"
			"f 331//474 315//474 300//474\n"
			"f 301//475 316//475 452//475\n"
			"f 331//476 330//476 315//476\n"
			"f 316//477 332//477 452//477\n"
			"f 331//478 346//478 330//478\n"
			"f 332//479 347//479 452//479\n"
			"f 331//480 361//480 346//480\n"
			"f 347//481 362//481 452//481\n"
			"f 331//482 376//482 361//482\n"
			"f 362//483 377//483 452//483\n"
			"f 331//484 391//484 376//484\n"
			"f 377//485 392//485 452//485\n"
			"f 331//486 406//486 391//486\n"
			"f 392//487 407//487 452//487\n"
			"f 331//488 421//488 406//488\n"
			"f 407//489 422//489 452//489\n"
			"f 331//490 436//490 421//490\n"
			"f 422//491 437//491 452//491\n"
			"f 331//492 451//492 436//492\n"
			"f 437//493 453//493 452//493\n"
			"f 331//494 467//494 451//494\n"
			"f 453//495 468//495 452//495\n"
			"f 331//496 482//496 467//496\n"
			"f 11//497 10//497 477//497\n"
			"f 471//498 4//498 3//498\n"
			"f 12//499 11//499 478//499\n"
			"f 472//500 5//500 4//500\n"
			"f 13//501 12//501 479//501\n"
			"f 473//502 6//502 5//502\n"
			"f 14//503 13//503 480//503\n"
			"f 474//504 7//504 6//504\n"
			"f 15//505 14//505 481//505\n"
			"f 475//506 8//506 7//506\n"
			"f 468//507 1//507 452//507\n"
			"f 331//508 15//508 482//508\n"
			"f 9//509 8//509 475//509\n"
			"f 469//510 2//510 1//510\n"
			"f 10//511 9//511 476//511\n"
			"f 470//512 3//512 2//512\n"
			"f 3//1 18//1 2//1\n"
			"f 10//2 11//2 25//2\n"
			"f 4//3 19//3 3//3\n"
			"f 11//4 12//4 26//4\n"
			"f 5//5 20//5 4//5\n"
			"f 12//6 13//6 27//6\n"
			"f 6//7 21//7 5//7\n"
			"f 13//8 14//8 28//8\n"
			"f 6//9 7//9 21//9\n"
			"f 14//10 15//10 29//10\n"
			"f 7//513 8//513 22//513\n"
			"f 9//514 24//514 8//514\n"
			"f 2//13 17//13 1//13\n"
			"f 10//14 25//14 9//14\n"
			"f 16//15 17//15 31//15\n"
			"f 25//16 40//16 24//16\n"
			"f 18//17 33//17 17//17\n"
			"f 25//18 26//18 40//18\n"
			"f 19//19 34//19 18//19\n"
			"f 26//20 27//20 41//20\n"
			"f 20//21 35//21 19//21\n"
			"f 28//22 43//22 27//22\n"
			"f 21//23 36//23 20//23\n"
			"f 29//24 44//24 28//24\n"
			"f 22//25 37//25 21//25\n"
			"f 29//26 30//26 44//26\n"
			"f 23//515 38//515 22//515\n"
			"f 23//516 24//516 38//516\n"
			"f 36//29 51//29 35//29\n"
			"f 44//517 59//517 43//517\n"
			"f 37//31 52//31 36//31\n"
			"f 45//32 60//32 44//32\n"
			"f 37//33 38//33 52//33\n"
			"f 39//34 54//34 38//34\n"
			"f 32//35 47//35 31//35\n"
			"f 40//36 55//36 39//36\n"
			"f 33//37 48//37 32//37\n"
			"f 40//38 41//38 55//38\n"
			"f 34//39 49//39 33//39\n"
			"f 42//40 57//40 41//40\n"
			"f 35//41 50//41 34//41\n"
			"f 43//42 58//42 42//42\n"
			"f 55//43 70//43 54//43\n"
			"f 48//44 63//44 47//44\n"
			"f 55//45 56//45 70//45\n"
			"f 49//46 64//46 48//46\n"
			"f 57//47 72//47 56//47\n"
			"f 50//48 65//48 49//48\n"
			"f 58//49 73//49 57//49\n"
			"f 51//50 66//50 50//50\n"
			"f 58//51 59//51 73//51\n"
			"f 51//52 52//52 66//52\n"
			"f 59//53 60//53 74//53\n"
			"f 52//518 53//518 67//518\n"
			"f 53//55 54//55 68//55\n"
			"f 47//56 62//56 46//56\n"
			"f 74//57 89//57 73//57\n"
			"f 66//58 67//58 81//58\n"
			"f 75//519 90//519 74//519\n"
			"f 67//60 68//60 82//60\n"
			"f 69//61 84//61 68//61\n"
			"f 62//62 77//62 61//62\n"
			"f 70//63 85//63 69//63\n"
			"f 63//64 78//64 62//64\n"
			"f 70//65 71//65 85//65\n"
			"f 64//66 79//66 63//66\n"
			"f 71//67 72//67 86//67\n"
			"f 65//68 80//68 64//68\n"
			"f 72//69 73//69 87//69\n"
			"f 66//70 81//70 65//70\n"
			"f 78//520 93//520 77//520\n"
			"f 85//72 86//72 100//72\n"
			"f 79//73 94//73 78//73\n"
			"f 86//74 87//74 101//74\n"
			"f 80//75 95//75 79//75\n"
			"f 87//76 88//76 102//76\n"
			"f 81//77 96//77 80//77\n"
			"f 89//521 104//521 88//521\n"
			"f 81//79 82//79 96//79\n"
			"f 90//80 105//80 89//80\n"
			"f 83//81 98//81 82//81\n"
			"f 83//82 84//82 98//82\n"
			"f 77//83 92//83 76//83\n"
			"f 85//84 100//84 84//84\n"
			"f 96//85 97//85 111//85\n"
			"f 105//86 120//86 104//86\n"
			"f 98//87 113//87 97//87\n"
			"f 99//88 114//88 98//88\n"
			"f 92//89 107//89 91//89\n"
			"f 100//90 115//90 99//90\n"
			"f 93//91 108//91 92//91\n"
			"f 100//92 101//92 115//92\n"
			"f 94//93 109//93 93//93\n"
			"f 102//94 117//94 101//94\n"
			"f 95//95 110//95 94//95\n"
			"f 103//96 118//96 102//96\n"
			"f 96//97 111//97 95//97\n"
			"f 104//98 119//98 103//98\n"
			"f 115//99 116//99 130//99\n"
			"f 108//100 109//100 123//100\n"
			"f 117//101 132//101 116//101\n"
			"f 110//102 125//102 109//102\n"
			"f 117//103 118//103 132//103\n"
			"f 111//104 126//104 110//104\n"
			"f 118//105 119//105 133//105\n"
			"f 111//106 112//106 126//106\n"
			"f 120//107 135//107 119//107\n"
			"f 113//108 128//108 112//108\n"
			"f 114//109 129//109 113//109\n"
			"f 107//110 122//110 106//110\n"
			"f 115//111 130//111 114//111\n"
			"f 108//112 123//112 107//112\n"
			"f 134//113 135//113 149//113\n"
			"f 128//522 143//522 127//522\n"
			"f 129//523 144//523 128//523\n"
			"f 122//116 137//116 121//116\n"
			"f 130//117 145//117 129//117\n"
			"f 123//118 138//118 122//118\n"
			"f 130//119 131//119 145//119\n"
			"f 124//120 139//120 123//120\n"
			"f 131//121 132//121 146//121\n"
			"f 124//122 125//122 139//122\n"
			"f 132//123 133//123 147//123\n"
			"f 126//124 141//124 125//124\n"
			"f 133//125 134//125 148//125\n"
			"f 126//126 127//126 141//126\n"
			"f 147//127 162//127 146//127\n"
			"f 139//128 140//128 154//128\n"
			"f 147//129 148//129 162//129\n"
			"f 141//130 156//130 140//130\n"
			"f 149//131 164//131 148//131\n"
			"f 141//132 142//132 156//132\n"
			"f 149//133 150//133 164//133\n"
			"f 143//134 158//134 142//134\n"
			"f 143//135 144//135 158//135\n"
			"f 137//136 152//136 136//136\n"
			"f 145//137 160//137 144//137\n"
			"f 138//138 153//138 137//138\n"
			"f 145//139 146//139 160//139\n"
			"f 139//140 154//140 138//140\n"
			"f 158//141 159//141 173//141\n"
			"f 152//142 167//142 151//142\n"
			"f 160//143 175//143 159//143\n"
			"f 152//524 153//524 167//524\n"
			"f 160//145 161//145 175//145\n"
			"f 154//146 169//146 153//146\n"
			"f 162//147 177//147 161//147\n"
			"f 154//148 155//148 169//148\n"
			"f 162//149 163//149 177//149\n"
			"f 156//150 171//150 155//150\n"
			"f 164//525 179//525 163//525\n"
			"f 156//152 157//152 171//152\n"
			"f 164//526 165//526 179//526\n"
			"f 158//154 173//154 157//154\n"
			"f 169//155 170//155 184//155\n"
			"f 177//156 178//156 192//156\n"
			"f 171//157 186//157 170//157\n"
			"f 178//158 179//158 193//158\n"
			"f 171//159 172//159 186//159\n"
			"f 179//160 180//160 194//160\n"
			"f 172//161 173//161 187//161\n"
			"f 174//162 189//162 173//162\n"
			"f 167//163 182//163 166//163\n"
			"f 175//164 190//164 174//164\n"
			"f 168//165 183//165 167//165\n"
			"f 175//166 176//166 190//166\n"
			"f 169//167 184//167 168//167\n"
			"f 176//168 177//168 191//168\n"
			"f 189//169 204//169 188//169\n"
			"f 182//170 197//170 181//170\n"
			"f 190//171 205//171 189//171\n"
			"f 183//172 198//172 182//172\n"
			"f 190//173 191//173 205//173\n"
			"f 184//174 199//174 183//174\n"
			"f 192//175 207//175 191//175\n"
			"f 184//176 185//176 199//176\n"
			"f 192//177 193//177 207//177\n"
			"f 186//178 201//178 185//178\n"
			"f 194//179 209//179 193//179\n"
			"f 186//180 187//180 201//180\n"
			"f 194//527 195//527 209//527\n"
			"f 187//182 188//182 202//182\n"
			"f 207//183 208//183 222//183\n"
			"f 201//184 216//184 200//184\n"
			"f 208//528 209//528 223//528\n"
			"f 201//186 202//186 216//186\n"
			"f 209//187 210//187 224//187\n"
			"f 202//188 203//188 217//188\n"
			"f 204//189 219//189 203//189\n"
			"f 197//190 212//190 196//190\n"
			"f 205//191 220//191 204//191\n"
			"f 198//192 213//192 197//192\n"
			"f 205//193 206//193 220//193\n"
			"f 198//194 199//194 213//194\n"
			"f 207//195 222//195 206//195\n"
			"f 200//196 215//196 199//196\n"
			"f 212//197 227//197 211//197\n"
			"f 220//198 235//198 219//198\n"
			"f 213//199 228//199 212//199\n"
			"f 220//200 221//200 235//200\n"
			"f 213//201 214//201 228//201\n"
			"f 221//202 222//202 236//202\n"
			"f 215//203 230//203 214//203\n"
			"f 223//204 238//204 222//204\n"
			"f 216//205 231//205 215//205\n"
			"f 224//206 239//206 223//206\n"
			"f 216//207 217//207 231//207\n"
			"f 225//208 240//208 224//208\n"
			"f 218//209 233//209 217//209\n"
			"f 219//210 234//210 218//210\n"
			"f 231//211 246//211 230//211\n"
			"f 238//212 239//212 253//212\n"
			"f 231//213 232//213 246//213\n"
			"f 239//214 240//214 254//214\n"
			"f 232//215 233//215 247//215\n"
			"f 233//216 234//216 248//216\n"
			"f 227//217 242//217 226//217\n"
			"f 235//218 250//218 234//218\n"
			"f 228//219 243//219 227//219\n"
			"f 235//220 236//220 250//220\n"
			"f 229//221 244//221 228//221\n"
			"f 237//222 252//222 236//222\n"
			"f 229//223 230//223 244//223\n"
			"f 238//224 253//224 237//224\n"
			"f 250//225 265//225 249//225\n"
			"f 243//226 258//226 242//226\n"
			"f 250//227 251//227 265//227\n"
			"f 244//228 259//228 243//228\n"
			"f 252//229 267//229 251//229\n"
			"f 245//230 260//230 244//230\n"
			"f 252//231 253//231 267//231\n"
			"f 246//232 261//232 245//232\n"
			"f 254//233 269//233 253//233\n"
			"f 246//234 247//234 261//234\n"
			"f 254//235 255//235 269//235\n"
			"f 248//236 263//236 247//236\n"
			"f 248//237 249//237 263//237\n"
			"f 242//238 257//238 241//238\n"
			"f 268//239 269//239 283//239\n"
			"f 261//240 262//240 276//240\n"
			"f 269//241 270//241 284//241\n"
			"f 263//242 278//242 262//242\n"
			"f 263//243 264//243 278//243\n"
			"f 257//244 272//244 256//244\n"
			"f 265//245 280//245 264//245\n"
			"f 258//246 273//246 257//246\n"
			"f 265//247 266//247 280//247\n"
			"f 258//248 259//248 273//248\n"
			"f 267//249 282//249 266//249\n"
			"f 260//250 275//250 259//250\n"
			"f 268//251 283//251 267//251\n"
			"f 261//252 276//252 260//252\n"
			"f 280//253 281//253 295//253\n"
			"f 273//254 274//254 288//254\n"
			"f 282//255 297//255 281//255\n"
			"f 274//256 275//256 289//256\n"
			"f 282//257 283//257 297//257\n"
			"f 276//258 291//258 275//258\n"
			"f 283//259 284//259 298//259\n"
			"f 276//260 277//260 291//260\n"
			"f 285//261 300//261 284//261\n"
			"f 277//262 278//262 292//262\n"
			"f 278//263 279//263 293//263\n"
			"f 272//264 287//264 271//264\n"
			"f 280//265 295//265 279//265\n"
			"f 273//266 288//266 272//266\n"
			"f 300//267 315//267 299//267\n"
			"f 292//268 293//268 307//268\n"
			"f 294//269 309//269 293//269\n"
			"f 287//270 302//270 286//270\n"
			"f 295//271 310//271 294//271\n"
			"f 288//272 303//272 287//272\n"
			"f 295//273 296//273 310//273\n"
			"f 288//274 289//274 303//274\n"
			"f 297//275 312//275 296//275\n"
			"f 289//276 290//276 304//276\n"
			"f 298//277 313//277 297//277\n"
			"f 291//278 306//278 290//278\n"
			"f 299//279 314//279 298//279\n"
			"f 291//280 292//280 306//280\n"
			"f 303//281 304//281 318//281\n"
			"f 312//282 327//282 311//282\n"
			"f 304//283 305//283 319//283\n"
			"f 312//284 313//284 327//284\n"
			"f 306//285 321//285 305//285\n"
			"f 313//286 314//286 328//286\n"
			"f 306//287 307//287 321//287\n"
			"f 315//288 330//288 314//288\n"
			"f 308//289 323//289 307//289\n"
			"f 309//290 324//290 308//290\n"
			"f 302//291 317//291 301//291\n"
			"f 310//292 325//292 309//292\n"
			"f 303//293 318//293 302//293\n"
			"f 310//294 311//294 325//294\n"
			"f 323//295 339//295 322//295\n"
			"f 323//296 324//296 339//296\n"
			"f 317//297 333//297 316//297\n"
			"f 325//298 341//298 324//298\n"
			"f 318//299 334//299 317//299\n"
			"f 325//300 326//300 341//300\n"
			"f 318//301 319//301 334//301\n"
			"f 327//302 343//302 326//302\n"
			"f 320//303 336//303 319//303\n"
			"f 327//304 328//304 343//304\n"
			"f 321//305 337//305 320//305\n"
			"f 329//306 345//306 328//306\n"
			"f 321//307 322//307 337//307\n"
			"f 329//529 330//529 345//529\n"
			"f 343//309 358//309 342//309\n"
			"f 335//310 336//310 350//310\n"
			"f 344//311 359//311 343//311\n"
			"f 337//312 352//312 336//312\n"
			"f 344//313 345//313 359//313\n"
			"f 337//314 338//314 352//314\n"
			"f 346//315 361//315 345//315\n"
			"f 339//316 354//316 338//316\n"
			"f 339//317 340//317 354//317\n"
			"f 333//318 348//318 332//318\n"
			"f 341//319 356//319 340//319\n"
			"f 334//320 349//320 333//320\n"
			"f 341//321 342//321 356//321\n"
			"f 334//322 335//322 349//322\n"
			"f 354//323 355//323 369//323\n"
			"f 348//324 363//324 347//324\n"
			"f 356//325 371//325 355//325\n"
			"f 349//326 364//326 348//326\n"
			"f 356//327 357//327 371//327\n"
			"f 349//328 350//328 364//328\n"
			"f 358//329 373//329 357//329\n"
			"f 350//330 351//330 365//330\n"
			"f 359//331 374//331 358//331\n"
			"f 352//332 367//332 351//332\n"
			"f 360//333 375//333 359//333\n"
			"f 352//334 353//334 367//334\n"
			"f 361//530 376//530 360//530\n"
			"f 354//336 369//336 353//336\n"
			"f 365//337 366//337 380//337\n"
			"f 374//338 389//338 373//338\n"
			"f 367//339 382//339 366//339\n"
			"f 375//340 390//340 374//340\n"
			"f 367//341 368//341 382//341\n"
			"f 376//342 391//342 375//342\n"
			"f 369//531 384//531 368//531\n"
			"f 369//532 370//532 384//532\n"
			"f 362//345 363//345 377//345\n"
			"f 371//346 386//346 370//346\n"
			"f 364//347 379//347 363//347\n"
			"f 371//348 372//348 386//348\n"
			"f 364//349 365//349 379//349\n"
			"f 373//350 388//350 372//350\n"
			"f 384//351 385//351 399//351\n"
			"f 377//352 378//352 392//352\n"
			"f 386//353 401//353 385//353\n"
			"f 378//354 379//354 393//354\n"
			"f 386//355 387//355 401//355\n"
			"f 380//356 395//356 379//356\n"
			"f 388//357 403//357 387//357\n"
			"f 380//358 381//358 395//358\n"
			"f 388//359 389//359 403//359\n"
			"f 382//360 397//360 381//360\n"
			"f 389//361 390//361 404//361\n"
			"f 382//362 383//362 397//362\n"
			"f 391//363 406//363 390//363\n"
			"f 384//364 399//364 383//364\n"
			"f 404//365 419//365 403//365\n"
			"f 397//366 412//366 396//366\n"
			"f 404//367 405//367 419//367\n"
			"f 397//368 398//368 412//368\n"
			"f 406//369 421//369 405//369\n"
			"f 399//370 414//370 398//370\n"
			"f 399//371 400//371 414//371\n"
			"f 393//372 408//372 392//372\n"
			"f 401//373 416//373 400//373\n"
			"f 394//533 409//533 393//533\n"
			"f 401//375 402//375 416//375\n"
			"f 394//376 395//376 409//376\n"
			"f 403//377 418//377 402//377\n"
			"f 395//378 396//378 410//378\n"
			"f 416//379 431//379 415//379\n"
			"f 409//380 424//380 408//380\n"
			"f 416//381 417//381 431//381\n"
			"f 410//382 425//382 409//382\n"
			"f 418//383 433//383 417//383\n"
			"f 410//384 411//384 425//384\n"
			"f 419//385 434//385 418//385\n"
			"f 412//386 427//386 411//386\n"
			"f 420//387 435//387 419//387\n"
			"f 412//388 413//388 427//388\n"
			"f 421//389 436//389 420//389\n"
			"f 414//390 429//390 413//390\n"
			"f 415//391 430//391 414//391\n"
			"f 408//392 423//392 407//392\n"
			"f 434//393 435//393 449//393\n"
			"f 427//394 428//394 442//394\n"
			"f 436//395 451//395 435//395\n"
			"f 429//396 444//396 428//396\n"
			"f 430//397 445//397 429//397\n"
			"f 423//398 438//398 422//398\n"
			"f 431//399 446//399 430//399\n"
			"f 424//400 439//400 423//400\n"
			"f 431//401 432//401 446//401\n"
			"f 425//402 440//402 424//402\n"
			"f 433//403 448//403 432//403\n"
			"f 425//404 426//404 440//404\n"
			"f 434//405 449//405 433//405\n"
			"f 427//406 442//406 426//406\n"
			"f 439//534 455//534 438//534\n"
			"f 446//408 447//408 462//408\n"
			"f 440//409 456//409 439//409\n"
			"f 448//410 464//410 447//410\n"
			"f 440//411 441//411 456//411\n"
			"f 449//412 465//412 448//412\n"
			"f 442//413 458//413 441//413\n"
			"f 450//535 466//535 449//535\n"
			"f 442//415 443//415 458//415\n"
			"f 451//416 467//416 450//416\n"
			"f 444//417 460//417 443//417\n"
			"f 445//418 461//418 444//418\n"
			"f 438//419 454//419 437//419\n"
			"f 446//420 462//420 445//420\n"
			"f 458//421 459//421 473//421\n"
			"f 467//422 482//422 466//422\n"
			"f 460//423 475//423 459//423\n"
			"f 461//424 476//424 460//424\n"
			"f 454//425 469//425 453//425\n"
			"f 462//426 477//426 461//426\n"
			"f 455//427 470//427 454//427\n"
			"f 462//428 463//428 477//428\n"
			"f 456//429 471//429 455//429\n"
			"f 464//430 479//430 463//430\n"
			"f 456//431 457//431 471//431\n"
			"f 464//432 465//432 479//432\n"
			"f 458//433 473//433 457//433\n"
			"f 465//434 466//434 480//434\n"
			"f 478//497 11//497 477//497\n"
			"f 470//498 471//498 3//498\n"
			"f 479//499 12//499 478//499\n"
			"f 471//500 472//500 4//500\n"
			"f 480//501 13//501 479//501\n"
			"f 472//502 473//502 5//502\n"
			"f 481//503 14//503 480//503\n"
			"f 473//504 474//504 6//504\n"
			"f 482//505 15//505 481//505\n"
			"f 474//536 475//536 7//536\n"
			"f 476//537 9//537 475//537\n"
			"f 468//510 469//510 1//510\n"
			"f 477//511 10//511 476//511\n"
			"f 469//512 470//512 2//512\n"
		};
		return std::istringstream(file);
	}
#pragma endregion


	void ModelManager::loadOBJFromFile(std::ifstream& _data, const size_t& _hash)
	{
		ModelData* data = new ModelData();
		std::string line;
		std::istringstream stringStream;

		while (std::getline(_data, line))
		{
			//Vertices
			if (line.substr(0, 2) == "v ")
			{
				stringStream = std::istringstream(line.substr(2));
				spehs::vec3 vertex;
				stringStream >> vertex.x;
				stringStream >> vertex.y;
				stringStream >> vertex.z;
				data->vertices.push_back(spehs::Vertex3D(vertex));
			}
			//Normals
			else if (line.substr(0, 3) == "vn ")
			{
				stringStream = std::istringstream(line.substr(3));
				spehs::vec3 normal;
				stringStream >> normal.x;
				stringStream >> normal.y;
				stringStream >> normal.z;
				data->normals.push_back(normal);
			}
			//Texture Coordinates
			else if (line.substr(0, 3) == "vt ")
			{
				stringStream = std::istringstream(line.substr(3));
				spehs::vec2 uv;
				stringStream >> uv.x;
				stringStream >> uv.y;
				data->textureCoordinates.push_back(uv);
			}
			//Elements
			else if (line.substr(0, 2) == "f ")
			{
				std::string subString = line.substr(2);
				GLushort v = 0, u = 0, n = 0;
				size_t pos;
				for (unsigned w = 0; w < 3; w++)
				{
					for (unsigned i = 0; i < 3; i++)
					{
						if (i < 2)
						{
							pos = subString.find('/');
							stringStream = std::istringstream(subString.substr(0, pos));
						}
						else
						{
							pos = subString.find(' ');
							stringStream = std::istringstream(subString);
						}

						switch (i)
						{
						case 0:
							stringStream >> v;
							break;
						case 1:
							stringStream >> u;
							break;
						case 2:
							stringStream >> n;
							break;
						}

						subString = subString.substr(pos + 1);
					}
					data->vertexElements.push_back(v - 1);
					data->textureElements.push_back(u - 1);
					data->normalElements.push_back(n - 1);
				}
			}
		}
		modelDataMap.insert(std::pair<size_t, ModelData*>(_hash, data));
	}
	void ModelManager::loadOBJFromStringStream(std::istringstream& _data, const size_t& _hash)
	{
		ModelData* data = new ModelData();
		std::string line;
		std::istringstream stringStream;

		while (std::getline(_data, line))
		{
			//Vertices
			if (line.substr(0, 2) == "v ")
			{
				stringStream = std::istringstream(line.substr(2));
				spehs::vec3 vertex;
				stringStream >> vertex.x;
				stringStream >> vertex.y;
				stringStream >> vertex.z;
				data->vertices.push_back(spehs::Vertex3D(vertex));
			}
			//Normals
			else if (line.substr(0, 3) == "vn ")
			{
				stringStream = std::istringstream(line.substr(3));
				spehs::vec3 normal;
				stringStream >> normal.x;
				stringStream >> normal.y;
				stringStream >> normal.z;
				data->normals.push_back(normal);
			}
			//Texture Coordinates
			else if (line.substr(0, 3) == "vt ")
			{
				stringStream = std::istringstream(line.substr(3));
				spehs::vec2 uv;
				stringStream >> uv.x;
				stringStream >> uv.y;
				data->textureCoordinates.push_back(uv);
			}
			//Elements
			else if (line.substr(0, 2) == "f ")
			{
				std::string subString = line.substr(2);
				GLushort v = 0, u = 0, n = 0;
				size_t pos;
				for (unsigned w = 0; w < 3; w++)
				{
					for (unsigned i = 0; i < 3; i++)
					{
						if (i < 2)
						{
							pos = subString.find('/');
							stringStream = std::istringstream(subString.substr(0, pos));
						}
						else
						{
							pos = subString.find(' ');
							stringStream = std::istringstream(subString);
						}

						switch (i)
						{
						case 0:
							stringStream >> v;
							break;
						case 1:
							stringStream >> u;
							break;
						case 2:
							stringStream >> n;
							break;
						}

						subString = subString.substr(pos + 1);
					}
					data->vertexElements.push_back(v - 1);
					data->textureElements.push_back(u - 1);
					data->normalElements.push_back(n - 1);
				}
			}
		}
		modelDataMap.insert(std::pair<size_t, ModelData*>(_hash, data));
	}
}